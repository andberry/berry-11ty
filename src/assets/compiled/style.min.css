@import"https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&family=Open+Sans:wght@300;400;700&display=swap";*,::before,::after{box-sizing:border-box;background-repeat:no-repeat}::before,::after{text-decoration:inherit;vertical-align:inherit}:where(:root){cursor:default;line-height:1.5;overflow-wrap:break-word;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent;-webkit-text-size-adjust:100%}:where(body){margin:0}:where(h1){font-size:2em;margin:.67em 0}:where(dl, ol, ul) :where(dl, ol, ul){margin:0}:where(hr){color:inherit;height:0}:where(nav) :where(ol, ul){list-style-type:none;padding:0}:where(nav li)::before{content:"â€‹";float:left}:where(pre){font-family:monospace,monospace;font-size:1em;overflow:auto}:where(abbr[title]){text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}:where(b, strong){font-weight:bolder}:where(code, kbd, samp){font-family:monospace,monospace;font-size:1em}:where(small){font-size:80%}:where(audio, canvas, iframe, img, svg, video){vertical-align:middle}:where(iframe){border-style:none}:where(svg:not([fill])){fill:currentColor}:where(table){border-collapse:collapse;border-color:inherit;text-indent:0}:where(button, input, select){margin:0}:where(button, [type="button" i], [type="reset" i], [type="submit" i]){-webkit-appearance:button}:where(fieldset){border:1px solid #a0a0a0}:where(progress){vertical-align:baseline}:where(textarea){margin:0;resize:vertical}:where([type="search" i]){-webkit-appearance:textfield;outline-offset:-2px}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}:where(dialog){background-color:white;border:solid;color:black;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content}:where(dialog:not([open])){display:none}:where(details > summary:first-of-type){display:list-item}:where([aria-busy="true" i]){cursor:progress}:where([aria-controls]){cursor:pointer}:where([aria-disabled="true" i], [disabled]){cursor:not-allowed}:where([aria-hidden="false" i][hidden]){display:initial}:where([aria-hidden="false" i][hidden]:not(:focus)){clip:rect(0, 0, 0, 0);position:absolute}input[type=text],input[type=number],input[type=email],input[type=password],input[type=search],input[type=tel],input[type=url],input[type=file],input[type=date],textarea{width:100%;height:48px;line-height:1;border-radius:4px;padding:0px 1.5rem;border:thin solid #b3b3b3;max-width:100%;transition:all 100ms linear;font-size:1rem;background:#fff;color:#333}input[type=text]:active,input[type=text]:focus,input[type=number]:active,input[type=number]:focus,input[type=email]:active,input[type=email]:focus,input[type=password]:active,input[type=password]:focus,input[type=search]:active,input[type=search]:focus,input[type=tel]:active,input[type=tel]:focus,input[type=url]:active,input[type=url]:focus,input[type=file]:active,input[type=file]:focus,input[type=date]:active,input[type=date]:focus,textarea:active,textarea:focus{outline:none;box-shadow:0px 2px 4px 2px rgba(0,0,0,.1)}input[type=file]{height:auto;padding-top:.5rem;padding-bottom:.5rem}::-moz-placeholder{color:#264677;opacity:.8;font-family:"Open Sans",sans-serif}:-ms-input-placeholder{color:#264677;opacity:.8;font-family:"Open Sans",sans-serif}::placeholder{color:#264677;opacity:.8;font-family:"Open Sans",sans-serif}textarea{height:100px;padding:1rem 1rem}select{width:100%;height:48px;padding:0px 3rem 0px 1.5rem;border:thin solid #ccc;background:#fff;-moz-appearance:none;-webkit-appearance:none;max-width:100%;width:100%;font-size:1rem;color:rgba(38,70,119,.8)}select:focus{outline:none}fieldset{border:none;padding:0px;margin-bottom:2rem}fieldset legend{margin-bottom:.5rem}fieldset .form-item{margin-bottom:.5rem}input[type=submit]:focus{outline:none}body{background:#fff;color:#333;font-family:"Open Sans",sans-serif;font-size:1rem;font-weight:300;line-height:1.7}@media(min-width: 64em){body{font-size:1.125rem}}p{margin-top:0px;margin-bottom:1rem}p:last-child{margin-bottom:0px}h1,h2,h3,h4,h5,h6{font-family:"Lato",sans-serif;font-weight:700;line-height:1.5;margin-bottom:.5rem;margin-top:2rem}@media(min-width: 64em){h1,h2,h3,h4,h5,h6{margin-bottom:.75rem;margin-top:4rem}}h1:first-child,h2:first-child,h3:first-child,h4:first-child,h5:first-child,h6:first-child{margin-top:0px}h1{font-size:2.25rem}@media(min-width: 64em){h1{font-size:2.75rem}}h2{font-size:1.875rem}@media(min-width: 64em){h2{font-size:2.25rem}}h3{font-size:1.5rem}@media(min-width: 64em){h3{font-size:1.875rem}}h4{font-size:1.375rem}@media(min-width: 64em){h4{font-size:1.5rem}}h5{font-size:1.125rem}@media(min-width: 64em){h5{font-size:1.375rem}}h6{font-size:1rem}@media(min-width: 64em){h6{font-size:1.125rem}}img{max-width:100%;width:100%;height:auto}a{color:#264677;text-decoration:underline;transition:all 100ms linear}a:hover{color:#9932cc}button:focus{outline:none}ul{margin-top:.75rem;margin-bottom:.75rem;padding-left:1.5rem}ul li{padding-top:.25rem;padding-bottom:.25rem}ul+p{margin-top:2rem}::-moz-selection{color:#fff;background:#264677}::selection{color:#fff;background:#264677}table{text-align:left;table-layout:fixed}table tbody{border-top:thin solid #b8b8b8;border-bottom:thin solid #b8b8b8}table tbody tr:nth-child(odd){background:#ccc}table td,table th{padding:.75rem 1rem;vertical-align:top}.l-container{width:100%;max-width:1440px;margin-left:auto;margin-right:auto;padding-left:30px;padding-right:30px}@media(min-width: 64em){.l-container{padding-left:15px;padding-right:15px}}.l-container .l-container{padding-left:0;padding-right:0}.l-grid{display:grid;grid-template-columns:repeat(2, minmax(0, 1fr));grid-template-rows:1fr;gap:30px 30px}@media(min-width: 48em){.l-grid{grid-template-columns:repeat(12, minmax(0, 1fr));gap:30px 30px}}.l-grid--super{display:grid;grid-template-columns:repeat(2, minmax(0, 1fr));grid-template-rows:1fr;gap:30px 30px}@media(min-width: 48em){.l-grid--super{grid-template-columns:repeat(12, minmax(0, 1fr));gap:30px 30px}}@media(min-width: 90em){.l-grid--super{grid-template-columns:1fr repeat(12, 90px) 1fr;overflow-x:hidden}}.l-cell-1{grid-column:span 1}.l-cell-2{grid-column:span 2}.l-cell-3{grid-column:span 3}.l-cell-4{grid-column:span 4}.l-cell-5{grid-column:span 5}.l-cell-6{grid-column:span 6}.l-cell-7{grid-column:span 7}.l-cell-8{grid-column:span 8}.l-cell-9{grid-column:span 9}.l-cell-10{grid-column:span 10}.l-cell-11{grid-column:span 11}.l-cell-12{grid-column:span 12}@media(min-width: 48em){.md\:l-cell-1{grid-column:span 1}}@media(min-width: 48em){.md\:l-cell-2{grid-column:span 2}}@media(min-width: 48em){.md\:l-cell-3{grid-column:span 3}}@media(min-width: 48em){.md\:l-cell-4{grid-column:span 4}}@media(min-width: 48em){.md\:l-cell-5{grid-column:span 5}}@media(min-width: 48em){.md\:l-cell-6{grid-column:span 6}}@media(min-width: 48em){.md\:l-cell-7{grid-column:span 7}}@media(min-width: 48em){.md\:l-cell-8{grid-column:span 8}}@media(min-width: 48em){.md\:l-cell-9{grid-column:span 9}}@media(min-width: 48em){.md\:l-cell-10{grid-column:span 10}}@media(min-width: 48em){.md\:l-cell-11{grid-column:span 11}}@media(min-width: 48em){.md\:l-cell-12{grid-column:span 12}}@media(min-width: 64em){.lg\:l-cell-1{grid-column:span 1}}@media(min-width: 64em){.lg\:l-cell-2{grid-column:span 2}}@media(min-width: 64em){.lg\:l-cell-3{grid-column:span 3}}@media(min-width: 64em){.lg\:l-cell-4{grid-column:span 4}}@media(min-width: 64em){.lg\:l-cell-5{grid-column:span 5}}@media(min-width: 64em){.lg\:l-cell-6{grid-column:span 6}}@media(min-width: 64em){.lg\:l-cell-7{grid-column:span 7}}@media(min-width: 64em){.lg\:l-cell-8{grid-column:span 8}}@media(min-width: 64em){.lg\:l-cell-9{grid-column:span 9}}@media(min-width: 64em){.lg\:l-cell-10{grid-column:span 10}}@media(min-width: 64em){.lg\:l-cell-11{grid-column:span 11}}@media(min-width: 64em){.lg\:l-cell-12{grid-column:span 12}}@media(min-width: 75em){.xl\:l-cell-1{grid-column:span 1}}@media(min-width: 75em){.xl\:l-cell-2{grid-column:span 2}}@media(min-width: 75em){.xl\:l-cell-3{grid-column:span 3}}@media(min-width: 75em){.xl\:l-cell-4{grid-column:span 4}}@media(min-width: 75em){.xl\:l-cell-5{grid-column:span 5}}@media(min-width: 75em){.xl\:l-cell-6{grid-column:span 6}}@media(min-width: 75em){.xl\:l-cell-7{grid-column:span 7}}@media(min-width: 75em){.xl\:l-cell-8{grid-column:span 8}}@media(min-width: 75em){.xl\:l-cell-9{grid-column:span 9}}@media(min-width: 75em){.xl\:l-cell-10{grid-column:span 10}}@media(min-width: 75em){.xl\:l-cell-11{grid-column:span 11}}@media(min-width: 75em){.xl\:l-cell-12{grid-column:span 12}}@media(min-width: 90em){.xxl\:l-cell-1{grid-column:span 1}}@media(min-width: 90em){.xxl\:l-cell-2{grid-column:span 2}}@media(min-width: 90em){.xxl\:l-cell-3{grid-column:span 3}}@media(min-width: 90em){.xxl\:l-cell-4{grid-column:span 4}}@media(min-width: 90em){.xxl\:l-cell-5{grid-column:span 5}}@media(min-width: 90em){.xxl\:l-cell-6{grid-column:span 6}}@media(min-width: 90em){.xxl\:l-cell-7{grid-column:span 7}}@media(min-width: 90em){.xxl\:l-cell-8{grid-column:span 8}}@media(min-width: 90em){.xxl\:l-cell-9{grid-column:span 9}}@media(min-width: 90em){.xxl\:l-cell-10{grid-column:span 10}}@media(min-width: 90em){.xxl\:l-cell-11{grid-column:span 11}}@media(min-width: 90em){.xxl\:l-cell-12{grid-column:span 12}}@media(min-width: 100em){.xxxl\:l-cell-1{grid-column:span 1}}@media(min-width: 100em){.xxxl\:l-cell-2{grid-column:span 2}}@media(min-width: 100em){.xxxl\:l-cell-3{grid-column:span 3}}@media(min-width: 100em){.xxxl\:l-cell-4{grid-column:span 4}}@media(min-width: 100em){.xxxl\:l-cell-5{grid-column:span 5}}@media(min-width: 100em){.xxxl\:l-cell-6{grid-column:span 6}}@media(min-width: 100em){.xxxl\:l-cell-7{grid-column:span 7}}@media(min-width: 100em){.xxxl\:l-cell-8{grid-column:span 8}}@media(min-width: 100em){.xxxl\:l-cell-9{grid-column:span 9}}@media(min-width: 100em){.xxxl\:l-cell-10{grid-column:span 10}}@media(min-width: 100em){.xxxl\:l-cell-11{grid-column:span 11}}@media(min-width: 100em){.xxxl\:l-cell-12{grid-column:span 12}}.c-header{padding-top:.75rem;padding-bottom:.75rem;background:#264677;color:#fff}.c-header__inner{display:flex;justify-content:space-between}.c-footer-main{padding-top:3rem;padding-bottom:4rem}.c-footer-main .menu{display:flex;margin:0px;padding:0px;list-style-type:none}.c-footer-main .menu>li{margin:0px;padding:0px}.c-footer-main .menu>li>a{display:block}.c-footer-main .menu>li:first-child>a{padding-left:0px}.c-footer-main .menu>li:last-child>a{padding-right:0px}.c-footer-bottom{background:#000;color:#fff;font-size:0.875rem;display:flex;justify-content:center;padding-top:1rem;padding-bottom:1rem}.c-button,input[type=submit]{display:inline-block;padding:.5rem 1rem;border-radius:4px;text-decoration:none;transition:all 250ms linear;line-height:1;font-size:1rem;border:none;width:100%;background:#264677;color:#9932cc}@media(min-width: 48em){.c-button,input[type=submit]{width:auto}}.c-button:hover,input[type=submit]:hover{cursor:pointer}.c-button:hover,input[type=submit]:hover{background:#9932cc;color:#264677}.c-callout-link{text-transform:uppercase;text-decoration:none;display:inline-block;font-weight:700;position:relative;line-height:1;color:#264677;transition:all 100ms linear;padding:5px 21px 3px 0px}.c-callout-link:hover{color:#9932cc;transition:all 250ms linear}.c-hero{background-size:cover;background-repeat:no-repeat;background-position:center;background-color:#fff;padding-top:8rem;padding-bottom:8rem;position:relative}@media(min-width: 48em){.c-hero{height:100vh;min-height:600px;padding-top:0;padding-bottom:0;display:flex;align-items:center}}.c-hero__bg{position:absolute;top:0px;left:0px;width:100%;height:100%;background-size:cover;background-repeat:no-repeat;background-position:center;-webkit-mask-image:url("/assets/images/hero-mask.svg");mask-image:url("/assets/images/hero-mask.svg");-webkit-mask-size:1600px auto;mask-size:1600px auto;-webkit-mask-position:500px 70%;mask-position:500px 70%;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}.c-hero__content{width:100%;position:relative;z-index:100;color:#264677;grid-column:span 2}@media(min-width: 48em){.c-hero__content{grid-column:span 4}}.c-hero__title{font-size:1.875rem;margin:0px}@media(min-width: 64em){.c-hero__title{font-size:2.25rem}}.c-hero__subtitle{font-size:1.5rem;margin:0px}@media(min-width: 64em){.c-hero__subtitle{font-size:1.875rem}}.u-list--coloured{list-style-type:none;margin:0px;padding:0px}.u-list--coloured li{position:relative;padding-left:.75rem;border-left:5px solid #264677;margin-bottom:1.5rem}.h1,.h2,.h3,.h4,.h5,.h6{font-family:"Lato",sans-serif;font-weight:700;line-height:1.5;margin-bottom:.5rem;margin-top:2rem}@media(min-width: 64em){.h1,.h2,.h3,.h4,.h5,.h6{margin-bottom:.75rem;margin-top:4rem}}.h1:first-child,.h2:first-child,.h3:first-child,.h4:first-child,.h5:first-child,.h6:first-child{margin-top:0px}.h1{font-size:2.25rem}@media(min-width: 64em){.h1{font-size:2.75rem}}.h2{font-size:1.875rem}@media(min-width: 64em){.h2{font-size:2.25rem}}.h3{font-size:1.5rem}@media(min-width: 64em){.h3{font-size:1.875rem}}.h4{font-size:1.375rem}@media(min-width: 64em){.h4{font-size:1.5rem}}.h5{font-size:1.125rem}@media(min-width: 64em){.h5{font-size:1.375rem}}.h6{font-size:1rem}@media(min-width: 64em){.h6{font-size:1.125rem}}.ts-base{font-family:"Open Sans",sans-serif;font-size:1rem;font-weight:300;line-height:1.7}@media(min-width: 64em){.ts-base{font-size:1.125rem}}@media(max-width: 63.99em){.u-show-on-desktop{display:none !important}}@media(min-width: 64em){.u-hide-on-desktop{display:none !important}}@media(min-width: 64em){.u-show-on-mobile{display:none !important}}@media(max-width: 63.99em){.u-hide-on-mobile{display:none !important}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsIjEtc2V0dGluZ3MvX3NldHRpbmdzLnNjc3MiLCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2FuaXRpemUuY3NzL3Nhbml0aXplLmNzcyIsIjMtYmFzZS9fZm9ybXMuc2NzcyIsIjMtYmFzZS9fYmFzZS5zY3NzIiwiMi10b29scy9fbWl4aW5zLXV0aWxpdGllcy5zY3NzIiwiMi10b29scy9fbWl4aW5zLXR5cG9ncmFwaHkuc2NzcyIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLW1xL19tcS5zY3NzIiwiNC1sYXlvdXQvX2NvbnRhaW5lci5zY3NzIiwiMi10b29scy9fbWl4aW5zLWNvbnRhaW5lci5zY3NzIiwiNC1sYXlvdXQvX2dyaWQuc2NzcyIsIjItdG9vbHMvX21peGlucy1ncmlkLnNjc3MiLCI1LWNvbXBvbmVudHMvX2hlYWRlci5zY3NzIiwiNS1jb21wb25lbnRzL19mb290ZXIuc2NzcyIsIjUtY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiNS1jb21wb25lbnRzL19jLWhlcm8uc2NzcyIsIjctdHJ1bXBzL191LWNvbG9ycy5zY3NzIiwiNy10cnVtcHMvX3UtdHlwb2dyYXBoeS5zY3NzIiwiNy10cnVtcHMvX3UtdmlzaWJpbGl0eS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNIQ3lJUSxDQUFBLG1CQ2pJUixxQkFHRSxDQUFBLDJCQUNBLENBQUEsaUJBUUYsdUJBRUUsQ0FBQSxzQkFDQSxDQUFBLGNBWUYsY0FDRSxDQUFBLGVBQ0EsQ0FBQSx3QkFDQSxDQUFBLGVBQ0EsQ0FBQSxhQUNBLENBREEsVUFDQSxDQUFBLHVDQUNBLENBQUEsNkJBQ0EsQ0FBQSxhQVVGLFFBQ0UsQ0FBQSxXQVFGLGFBQ0UsQ0FBQSxjQUNBLENBQUEsc0NBVUYsUUFDRSxDQUFBLFdBUUYsYUFDRSxDQUFBLFFBQ0EsQ0FBQSwyQkFPRixvQkFDRSxDQUFBLFNBQ0EsQ0FBQSx1QkFPRixXQUNFLENBQUEsVUFDQSxDQUFBLFlBU0YsK0JB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LFVEckVKLGtCQ3FFSSxDQUFBLFdEckVKLG1CQ3FFSSxDQUFBLFdEckVKLG1CQ3FFSSxDQUFBLFdEckVKLG1CQ3FFSSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixjR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixlR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHdCSnlGTixnQkd0Sk0sbUJDNkRBLENBQUEsQ0FBQSx3Qkp5Rk4sZ0JHdEpNLG1CQzZEQSxDQUFBLENBQUEsd0JKeUZOLGdCR3RKTSxtQkM2REEsQ0FBQSxDQUFBLHlCSnlGTixnQkd0Sk0sa0JDNkRBLENBQUEsQ0FBQSx5Qkp5Rk4sZ0JHdEpNLGtCQzZEQSxDQUFBLENBQUEseUJKeUZOLGdCR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHlCSnlGTixnQkd0Sk0sa0JDNkRBLENBQUEsQ0FBQSx5Qkp5Rk4sZ0JHdEpNLGtCQzZEQSxDQUFBLENBQUEseUJKeUZOLGdCR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHlCSnlGTixnQkd0Sk0sa0JDNkRBLENBQUEsQ0FBQSx5Qkp5Rk4sZ0JHdEpNLGtCQzZEQSxDQUFBLENBQUEseUJKeUZOLGdCR3RKTSxrQkM2REEsQ0FBQSxDQUFBLHlCSnlG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LENBQUEsU1lnQ2hCLGtDaEJpR2dCLENBQUEsY0lwSUosQ0FBQSxlQ21DUixDQUFBLGVBQ0EsQ0FBQSx3QkNzSUYsU1V2SUYsa0JaaENnQixDQUFBLENBQUEsMkJFdUtkLG1CV2hMRix1QkFFUSxDQUFBLENBQUEsd0JYOEtOLG1CVzFLRix1QkFFUSxDQUFBLENBQUEsd0JYd0tOLGtCV3BLRix1QkFFUSxDQUFBLENBQUEsMkJYa0tOLGtCVzlKRix1QkFFUSxDQUFBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnRcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TGF0bzp3Z2h0QDMwMDs0MDA7NzAwJmZhbWlseT1PcGVuK1NhbnM6d2dodEAzMDA7NDAwOzcwMCZkaXNwbGF5PXN3YXBcIjsqLDo6YmVmb3JlLDo6YWZ0ZXJ7Ym94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdH06OmJlZm9yZSw6OmFmdGVye3RleHQtZGVjb3JhdGlvbjppbmhlcml0O3ZlcnRpY2FsLWFsaWduOmluaGVyaXR9OndoZXJlKDpyb290KXtjdXJzb3I6ZGVmYXVsdDtsaW5lLWhlaWdodDoxLjU7b3ZlcmZsb3ctd3JhcDpicmVhay13b3JkOy1tb3otdGFiLXNpemU6NDt0YWItc2l6ZTo0Oy13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudDstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6MTAwJX06d2hlcmUoYm9keSl7bWFyZ2luOjB9OndoZXJlKGgxKXtmb250LXNpemU6MmVtO21hcmdpbjouNjdlbSAwfTp3aGVyZShkbCwgb2wsIHVsKSA6d2hlcmUoZGwsIG9sLCB1bCl7bWFyZ2luOjB9OndoZXJlKGhyKXtjb2xvcjppbmhlcml0O2hlaWdodDowfTp3aGVyZShuYXYpIDp3aGVyZShvbCwgdWwpe2xpc3Qtc3R5bGUtdHlwZTpub25lO3BhZGRpbmc6MH06d2hlcmUobmF2IGxpKTo6YmVmb3Jle2NvbnRlbnQ6XCLigItcIjtmbG9hdDpsZWZ0fTp3aGVyZShwcmUpe2ZvbnQtZmFtaWx5Om1vbm9zcGFjZSxtb25vc3BhY2U7Zm9udC1zaXplOjFlbTtvdmVyZmxvdzphdXRvfTp3aGVyZShhYmJyW3RpdGxlXSl7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZH06d2hlcmUoYiwgc3Ryb25nKXtmb250LXdlaWdodDpib2xkZXJ9OndoZXJlKGNvZGUsIGtiZCwgc2FtcCl7Zm9udC1mYW1pbHk6bW9ub3NwYWNlLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfTp3aGVyZShzbWFsbCl7Zm9udC1zaXplOjgwJX06d2hlcmUoYXVkaW8sIGNhbnZhcywgaWZyYW1lLCBpbWcsIHN2ZywgdmlkZW8pe3ZlcnRpY2FsLWFsaWduOm1pZGRsZX06d2hlcmUoaWZyYW1lKXtib3JkZXItc3R5bGU6bm9uZX06d2hlcmUoc3ZnOm5vdChbZmlsbF0pKXtmaWxsOmN1cnJlbnRDb2xvcn06d2hlcmUodGFibGUpe2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtib3JkZXItY29sb3I6aW5oZXJpdDt0ZXh0LWluZGVudDowfTp3aGVyZShidXR0b24sIGlucHV0LCBzZWxlY3Qpe21hcmdpbjowfTp3aGVyZShidXR0b24sIFt0eXBlPVwiYnV0dG9uXCIgaV0sIFt0eXBlPVwicmVzZXRcIiBpXSwgW3R5cGU9XCJzdWJtaXRcIiBpXSl7LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbn06d2hlcmUoZmllbGRzZXQpe2JvcmRlcjoxcHggc29saWQgI2EwYTBhMH06d2hlcmUocHJvZ3Jlc3Mpe3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfTp3aGVyZSh0ZXh0YXJlYSl7bWFyZ2luOjA7cmVzaXplOnZlcnRpY2FsfTp3aGVyZShbdHlwZT1cInNlYXJjaFwiIGldKXstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkO291dGxpbmUtb2Zmc2V0Oi0ycHh9Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b306Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6aW5oZXJpdDtvcGFjaXR5Oi41NH06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2ZvbnQ6aW5oZXJpdH06d2hlcmUoZGlhbG9nKXtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO2JvcmRlcjpzb2xpZDtjb2xvcjpibGFjaztoZWlnaHQ6LW1vei1maXQtY29udGVudDtoZWlnaHQ6Zml0LWNvbnRlbnQ7bGVmdDowO21hcmdpbjphdXRvO3BhZGRpbmc6MWVtO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7d2lkdGg6LW1vei1maXQtY29udGVudDt3aWR0aDpmaXQtY29udGVudH06d2hlcmUoZGlhbG9nOm5vdChbb3Blbl0pKXtkaXNwbGF5Om5vbmV9OndoZXJlKGRldGFpbHMgPiBzdW1tYXJ5OmZpcnN0LW9mLXR5cGUpe2Rpc3BsYXk6bGlzdC1pdGVtfTp3aGVyZShbYXJpYS1idXN5PVwidHJ1ZVwiIGldKXtjdXJzb3I6cHJvZ3Jlc3N9OndoZXJlKFthcmlhLWNvbnRyb2xzXSl7Y3Vyc29yOnBvaW50ZXJ9OndoZXJlKFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiIGldLCBbZGlzYWJsZWRdKXtjdXJzb3I6bm90LWFsbG93ZWR9OndoZXJlKFthcmlhLWhpZGRlbj1cImZhbHNlXCIgaV1baGlkZGVuXSl7ZGlzcGxheTppbml0aWFsfTp3aGVyZShbYXJpYS1oaWRkZW49XCJmYWxzZVwiIGldW2hpZGRlbl06bm90KDpmb2N1cykpe2NsaXA6cmVjdCgwLCAwLCAwLCAwKTtwb3NpdGlvbjphYnNvbHV0ZX1pbnB1dFt0eXBlPXRleHRdLGlucHV0W3R5cGU9bnVtYmVyXSxpbnB1dFt0eXBlPWVtYWlsXSxpbnB1dFt0eXBlPXBhc3N3b3JkXSxpbnB1dFt0eXBlPXNlYXJjaF0saW5wdXRbdHlwZT10ZWxdLGlucHV0W3R5cGU9dXJsXSxpbnB1dFt0eXBlPWZpbGVdLGlucHV0W3R5cGU9ZGF0ZV0sdGV4dGFyZWF7d2lkdGg6MTAwJTtoZWlnaHQ6NDhweDtsaW5lLWhlaWdodDoxO2JvcmRlci1yYWRpdXM6NHB4O3BhZGRpbmc6MHB4IDEuNXJlbTtib3JkZXI6dGhpbiBzb2xpZCAjYjNiM2IzO21heC13aWR0aDoxMDAlO3RyYW5zaXRpb246YWxsIDEwMG1zIGxpbmVhcjtmb250LXNpemU6MXJlbTtiYWNrZ3JvdW5kOiNmZmY7Y29sb3I6IzMzM31pbnB1dFt0eXBlPXRleHRdOmFjdGl2ZSxpbnB1dFt0eXBlPXRleHRdOmZvY3VzLGlucHV0W3R5cGU9bnVtYmVyXTphY3RpdmUsaW5wdXRbdHlwZT1udW1iZXJdOmZvY3VzLGlucHV0W3R5cGU9ZW1haWxdOmFjdGl2ZSxpbnB1dFt0eXBlPWVtYWlsXTpmb2N1cyxpbnB1dFt0eXBlPXBhc3N3b3JkXTphY3RpdmUsaW5wdXRbdHlwZT1wYXNzd29yZF06Zm9jdXMsaW5wdXRbdHlwZT1zZWFyY2hdOmFjdGl2ZSxpbnB1dFt0eXBlPXNlYXJjaF06Zm9jdXMsaW5wdXRbdHlwZT10ZWxdOmFjdGl2ZSxpbnB1dFt0eXBlPXRlbF06Zm9jdXMsaW5wdXRbdHlwZT11cmxdOmFjdGl2ZSxpbnB1dFt0eXBlPXVybF06Zm9jdXMsaW5wdXRbdHlwZT1maWxlXTphY3RpdmUsaW5wdXRbdHlwZT1maWxlXTpmb2N1cyxpbnB1dFt0eXBlPWRhdGVdOmFjdGl2ZSxpbnB1dFt0eXBlPWRhdGVdOmZvY3VzLHRleHRhcmVhOmFjdGl2ZSx0ZXh0YXJlYTpmb2N1c3tvdXRsaW5lOm5vbmU7Ym94LXNoYWRvdzowcHggMnB4IDRweCAycHggcmdiYSgwLDAsMCwuMSl9aW5wdXRbdHlwZT1maWxlXXtoZWlnaHQ6YXV0bztwYWRkaW5nLXRvcDouNXJlbTtwYWRkaW5nLWJvdHRvbTouNXJlbX06OnBsYWNlaG9sZGVye2NvbG9yOiMyNjQ2Nzc7b3BhY2l0eTouODtmb250LWZhbWlseTpcIk9wZW4gU2Fuc1wiLHNhbnMtc2VyaWZ9dGV4dGFyZWF7aGVpZ2h0OjEwMHB4O3BhZGRpbmc6MXJlbSAxcmVtfXNlbGVjdHt3aWR0aDoxMDAlO2hlaWdodDo0OHB4O3BhZGRpbmc6MHB4IDNyZW0gMHB4IDEuNXJlbTtib3JkZXI6dGhpbiBzb2xpZCAjY2NjO2JhY2tncm91bmQ6I2ZmZjstbW96LWFwcGVhcmFuY2U6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTttYXgtd2lkdGg6MTAwJTt3aWR0aDoxMDAlO2ZvbnQtc2l6ZToxcmVtO2NvbG9yOnJnYmEoMzgsNzAsMTE5LC44KX1zZWxlY3Q6Zm9jdXN7b3V0bGluZTpub25lfWZpZWxkc2V0e2JvcmRlcjpub25lO3BhZGRpbmc6MHB4O21hcmdpbi1ib3R0b206MnJlbX1maWVsZHNldCBsZWdlbmR7bWFyZ2luLWJvdHRvbTouNXJlbX1maWVsZHNldCAuZm9ybS1pdGVte21hcmdpbi1ib3R0b206LjVyZW19aW5wdXRbdHlwZT1zdWJtaXRdOmZvY3Vze291dGxpbmU6bm9uZX1ib2R5e2JhY2tncm91bmQ6I2ZmZjtjb2xvcjojMzMzO2ZvbnQtZmFtaWx5OlwiT3BlbiBTYW5zXCIsc2Fucy1zZXJpZjtmb250LXNpemU6MXJlbTtmb250LXdlaWdodDozMDA7bGluZS1oZWlnaHQ6MS43fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pe2JvZHl7Zm9udC1zaXplOjEuMTI1cmVtfX1we21hcmdpbi10b3A6MHB4O21hcmdpbi1ib3R0b206MXJlbX1wOmxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTowcHh9aDEsaDIsaDMsaDQsaDUsaDZ7Zm9udC1mYW1pbHk6XCJMYXRvXCIsc2Fucy1zZXJpZjtmb250LXdlaWdodDo3MDA7bGluZS1oZWlnaHQ6MS41O21hcmdpbi1ib3R0b206LjVyZW07bWFyZ2luLXRvcDoycmVtfUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pe2gxLGgyLGgzLGg0LGg1LGg2e21hcmdpbi1ib3R0b206Ljc1cmVtO21hcmdpbi10b3A6NHJlbX19aDE6Zmlyc3QtY2hpbGQsaDI6Zmlyc3QtY2hpbGQsaDM6Zmlyc3QtY2hpbGQsaDQ6Zmlyc3QtY2hpbGQsaDU6Zmlyc3QtY2hpbGQsaDY6Zmlyc3QtY2hpbGR7bWFyZ2luLXRvcDowcHh9aDF7Zm9udC1zaXplOjIuMjVyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7aDF7Zm9udC1zaXplOjIuNzVyZW19fWgye2ZvbnQtc2l6ZToxLjg3NXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXtoMntmb250LXNpemU6Mi4yNXJlbX19aDN7Zm9udC1zaXplOjEuNXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXtoM3tmb250LXNpemU6MS44NzVyZW19fWg0e2ZvbnQtc2l6ZToxLjM3NXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXtoNHtmb250LXNpemU6MS41cmVtfX1oNXtmb250LXNpemU6MS4xMjVyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7aDV7Zm9udC1zaXplOjEuMzc1cmVtfX1oNntmb250LXNpemU6MXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXtoNntmb250LXNpemU6MS4xMjVyZW19fWltZ3ttYXgtd2lkdGg6MTAwJTt3aWR0aDoxMDAlO2hlaWdodDphdXRvfWF7Y29sb3I6IzI2NDY3Nzt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO3RyYW5zaXRpb246YWxsIDEwMG1zIGxpbmVhcn1hOmhvdmVye2NvbG9yOiM5OTMyY2N9YnV0dG9uOmZvY3Vze291dGxpbmU6bm9uZX11bHttYXJnaW4tdG9wOi43NXJlbTttYXJnaW4tYm90dG9tOi43NXJlbTtwYWRkaW5nLWxlZnQ6MS41cmVtfXVsIGxpe3BhZGRpbmctdG9wOi4yNXJlbTtwYWRkaW5nLWJvdHRvbTouMjVyZW19dWwrcHttYXJnaW4tdG9wOjJyZW19OjpzZWxlY3Rpb257Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiMyNjQ2Nzd9dGFibGV7dGV4dC1hbGlnbjpsZWZ0O3RhYmxlLWxheW91dDpmaXhlZH10YWJsZSB0Ym9keXtib3JkZXItdG9wOnRoaW4gc29saWQgI2I4YjhiODtib3JkZXItYm90dG9tOnRoaW4gc29saWQgI2I4YjhiOH10YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQob2RkKXtiYWNrZ3JvdW5kOiNjY2N9dGFibGUgdGQsdGFibGUgdGh7cGFkZGluZzouNzVyZW0gMXJlbTt2ZXJ0aWNhbC1hbGlnbjp0b3B9LmwtY29udGFpbmVye3dpZHRoOjEwMCU7bWF4LXdpZHRoOjE0NDBweDttYXJnaW4tbGVmdDphdXRvO21hcmdpbi1yaWdodDphdXRvO3BhZGRpbmctbGVmdDozMHB4O3BhZGRpbmctcmlnaHQ6MzBweH1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsubC1jb250YWluZXJ7cGFkZGluZy1sZWZ0OjE1cHg7cGFkZGluZy1yaWdodDoxNXB4fX0ubC1jb250YWluZXIgLmwtY29udGFpbmVye3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MH0ubC1ncmlke2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDIsIG1pbm1heCgwLCAxZnIpKTtncmlkLXRlbXBsYXRlLXJvd3M6MWZyO2dhcDozMHB4IDMwcHh9QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7LmwtZ3JpZHtncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDEyLCBtaW5tYXgoMCwgMWZyKSk7Z2FwOjMwcHggMzBweH19LmwtZ3JpZC0tc3VwZXJ7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoMiwgbWlubWF4KDAsIDFmcikpO2dyaWQtdGVtcGxhdGUtcm93czoxZnI7Z2FwOjMwcHggMzBweH1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsubC1ncmlkLS1zdXBlcntncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDEyLCBtaW5tYXgoMCwgMWZyKSk7Z2FwOjMwcHggMzBweH19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7LmwtZ3JpZC0tc3VwZXJ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmciByZXBlYXQoMTIsIDkwcHgpIDFmcjtvdmVyZmxvdy14OmhpZGRlbn19LmwtY2VsbC0xe2dyaWQtY29sdW1uOnNwYW4gMX0ubC1jZWxsLTJ7Z3JpZC1jb2x1bW46c3BhbiAyfS5sLWNlbGwtM3tncmlkLWNvbHVtbjpzcGFuIDN9LmwtY2VsbC00e2dyaWQtY29sdW1uOnNwYW4gNH0ubC1jZWxsLTV7Z3JpZC1jb2x1bW46c3BhbiA1fS5sLWNlbGwtNntncmlkLWNvbHVtbjpzcGFuIDZ9LmwtY2VsbC03e2dyaWQtY29sdW1uOnNwYW4gN30ubC1jZWxsLTh7Z3JpZC1jb2x1bW46c3BhbiA4fS5sLWNlbGwtOXtncmlkLWNvbHVtbjpzcGFuIDl9LmwtY2VsbC0xMHtncmlkLWNvbHVtbjpzcGFuIDEwfS5sLWNlbGwtMTF7Z3JpZC1jb2x1bW46c3BhbiAxMX0ubC1jZWxsLTEye2dyaWQtY29sdW1uOnNwYW4gMTJ9QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7Lm1kXFw6bC1jZWxsLTF7Z3JpZC1jb2x1bW46c3BhbiAxfX1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsubWRcXDpsLWNlbGwtMntncmlkLWNvbHVtbjpzcGFuIDJ9fUBtZWRpYShtaW4td2lkdGg6IDQ4ZW0pey5tZFxcOmwtY2VsbC0ze2dyaWQtY29sdW1uOnNwYW4gM319QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7Lm1kXFw6bC1jZWxsLTR7Z3JpZC1jb2x1bW46c3BhbiA0fX1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsubWRcXDpsLWNlbGwtNXtncmlkLWNvbHVtbjpzcGFuIDV9fUBtZWRpYShtaW4td2lkdGg6IDQ4ZW0pey5tZFxcOmwtY2VsbC02e2dyaWQtY29sdW1uOnNwYW4gNn19QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7Lm1kXFw6bC1jZWxsLTd7Z3JpZC1jb2x1bW46c3BhbiA3fX1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsubWRcXDpsLWNlbGwtOHtncmlkLWNvbHVtbjpzcGFuIDh9fUBtZWRpYShtaW4td2lkdGg6IDQ4ZW0pey5tZFxcOmwtY2VsbC05e2dyaWQtY29sdW1uOnNwYW4gOX19QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7Lm1kXFw6bC1jZWxsLTEwe2dyaWQtY29sdW1uOnNwYW4gMTB9fUBtZWRpYShtaW4td2lkdGg6IDQ4ZW0pey5tZFxcOmwtY2VsbC0xMXtncmlkLWNvbHVtbjpzcGFuIDExfX1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsubWRcXDpsLWNlbGwtMTJ7Z3JpZC1jb2x1bW46c3BhbiAxMn19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmxnXFw6bC1jZWxsLTF7Z3JpZC1jb2x1bW46c3BhbiAxfX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsubGdcXDpsLWNlbGwtMntncmlkLWNvbHVtbjpzcGFuIDJ9fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey5sZ1xcOmwtY2VsbC0ze2dyaWQtY29sdW1uOnNwYW4gM319QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmxnXFw6bC1jZWxsLTR7Z3JpZC1jb2x1bW46c3BhbiA0fX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsubGdcXDpsLWNlbGwtNXtncmlkLWNvbHVtbjpzcGFuIDV9fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey5sZ1xcOmwtY2VsbC02e2dyaWQtY29sdW1uOnNwYW4gNn19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmxnXFw6bC1jZWxsLTd7Z3JpZC1jb2x1bW46c3BhbiA3fX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsubGdcXDpsLWNlbGwtOHtncmlkLWNvbHVtbjpzcGFuIDh9fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey5sZ1xcOmwtY2VsbC05e2dyaWQtY29sdW1uOnNwYW4gOX19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmxnXFw6bC1jZWxsLTEwe2dyaWQtY29sdW1uOnNwYW4gMTB9fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey5sZ1xcOmwtY2VsbC0xMXtncmlkLWNvbHVtbjpzcGFuIDExfX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsubGdcXDpsLWNlbGwtMTJ7Z3JpZC1jb2x1bW46c3BhbiAxMn19QG1lZGlhKG1pbi13aWR0aDogNzVlbSl7LnhsXFw6bC1jZWxsLTF7Z3JpZC1jb2x1bW46c3BhbiAxfX1AbWVkaWEobWluLXdpZHRoOiA3NWVtKXsueGxcXDpsLWNlbGwtMntncmlkLWNvbHVtbjpzcGFuIDJ9fUBtZWRpYShtaW4td2lkdGg6IDc1ZW0pey54bFxcOmwtY2VsbC0ze2dyaWQtY29sdW1uOnNwYW4gM319QG1lZGlhKG1pbi13aWR0aDogNzVlbSl7LnhsXFw6bC1jZWxsLTR7Z3JpZC1jb2x1bW46c3BhbiA0fX1AbWVkaWEobWluLXdpZHRoOiA3NWVtKXsueGxcXDpsLWNlbGwtNXtncmlkLWNvbHVtbjpzcGFuIDV9fUBtZWRpYShtaW4td2lkdGg6IDc1ZW0pey54bFxcOmwtY2VsbC02e2dyaWQtY29sdW1uOnNwYW4gNn19QG1lZGlhKG1pbi13aWR0aDogNzVlbSl7LnhsXFw6bC1jZWxsLTd7Z3JpZC1jb2x1bW46c3BhbiA3fX1AbWVkaWEobWluLXdpZHRoOiA3NWVtKXsueGxcXDpsLWNlbGwtOHtncmlkLWNvbHVtbjpzcGFuIDh9fUBtZWRpYShtaW4td2lkdGg6IDc1ZW0pey54bFxcOmwtY2VsbC05e2dyaWQtY29sdW1uOnNwYW4gOX19QG1lZGlhKG1pbi13aWR0aDogNzVlbSl7LnhsXFw6bC1jZWxsLTEwe2dyaWQtY29sdW1uOnNwYW4gMTB9fUBtZWRpYShtaW4td2lkdGg6IDc1ZW0pey54bFxcOmwtY2VsbC0xMXtncmlkLWNvbHVtbjpzcGFuIDExfX1AbWVkaWEobWluLXdpZHRoOiA3NWVtKXsueGxcXDpsLWNlbGwtMTJ7Z3JpZC1jb2x1bW46c3BhbiAxMn19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC0xe2dyaWQtY29sdW1uOnNwYW4gMX19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC0ye2dyaWQtY29sdW1uOnNwYW4gMn19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC0ze2dyaWQtY29sdW1uOnNwYW4gM319QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC00e2dyaWQtY29sdW1uOnNwYW4gNH19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC01e2dyaWQtY29sdW1uOnNwYW4gNX19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC02e2dyaWQtY29sdW1uOnNwYW4gNn19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC03e2dyaWQtY29sdW1uOnNwYW4gN319QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC04e2dyaWQtY29sdW1uOnNwYW4gOH19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC05e2dyaWQtY29sdW1uOnNwYW4gOX19QG1lZGlhKG1pbi13aWR0aDogOTBlbSl7Lnh4bFxcOmwtY2VsbC0xMHtncmlkLWNvbHVtbjpzcGFuIDEwfX1AbWVkaWEobWluLXdpZHRoOiA5MGVtKXsueHhsXFw6bC1jZWxsLTExe2dyaWQtY29sdW1uOnNwYW4gMTF9fUBtZWRpYShtaW4td2lkdGg6IDkwZW0pey54eGxcXDpsLWNlbGwtMTJ7Z3JpZC1jb2x1bW46c3BhbiAxMn19QG1lZGlhKG1pbi13aWR0aDogMTAwZW0pey54eHhsXFw6bC1jZWxsLTF7Z3JpZC1jb2x1bW46c3BhbiAxfX1AbWVkaWEobWluLXdpZHRoOiAxMDBlbSl7Lnh4eGxcXDpsLWNlbGwtMntncmlkLWNvbHVtbjpzcGFuIDJ9fUBtZWRpYShtaW4td2lkdGg6IDEwMGVtKXsueHh4bFxcOmwtY2VsbC0ze2dyaWQtY29sdW1uOnNwYW4gM319QG1lZGlhKG1pbi13aWR0aDogMTAwZW0pey54eHhsXFw6bC1jZWxsLTR7Z3JpZC1jb2x1bW46c3BhbiA0fX1AbWVkaWEobWluLXdpZHRoOiAxMDBlbSl7Lnh4eGxcXDpsLWNlbGwtNXtncmlkLWNvbHVtbjpzcGFuIDV9fUBtZWRpYShtaW4td2lkdGg6IDEwMGVtKXsueHh4bFxcOmwtY2VsbC02e2dyaWQtY29sdW1uOnNwYW4gNn19QG1lZGlhKG1pbi13aWR0aDogMTAwZW0pey54eHhsXFw6bC1jZWxsLTd7Z3JpZC1jb2x1bW46c3BhbiA3fX1AbWVkaWEobWluLXdpZHRoOiAxMDBlbSl7Lnh4eGxcXDpsLWNlbGwtOHtncmlkLWNvbHVtbjpzcGFuIDh9fUBtZWRpYShtaW4td2lkdGg6IDEwMGVtKXsueHh4bFxcOmwtY2VsbC05e2dyaWQtY29sdW1uOnNwYW4gOX19QG1lZGlhKG1pbi13aWR0aDogMTAwZW0pey54eHhsXFw6bC1jZWxsLTEwe2dyaWQtY29sdW1uOnNwYW4gMTB9fUBtZWRpYShtaW4td2lkdGg6IDEwMGVtKXsueHh4bFxcOmwtY2VsbC0xMXtncmlkLWNvbHVtbjpzcGFuIDExfX1AbWVkaWEobWluLXdpZHRoOiAxMDBlbSl7Lnh4eGxcXDpsLWNlbGwtMTJ7Z3JpZC1jb2x1bW46c3BhbiAxMn19LmMtaGVhZGVye3BhZGRpbmctdG9wOi43NXJlbTtwYWRkaW5nLWJvdHRvbTouNzVyZW07YmFja2dyb3VuZDojMjY0Njc3O2NvbG9yOiNmZmZ9LmMtaGVhZGVyX19pbm5lcntkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59LmMtZm9vdGVyLW1haW57cGFkZGluZy10b3A6M3JlbTtwYWRkaW5nLWJvdHRvbTo0cmVtfS5jLWZvb3Rlci1tYWluIC5tZW51e2Rpc3BsYXk6ZmxleDttYXJnaW46MHB4O3BhZGRpbmc6MHB4O2xpc3Qtc3R5bGUtdHlwZTpub25lfS5jLWZvb3Rlci1tYWluIC5tZW51Pmxpe21hcmdpbjowcHg7cGFkZGluZzowcHh9LmMtZm9vdGVyLW1haW4gLm1lbnU+bGk+YXtkaXNwbGF5OmJsb2NrfS5jLWZvb3Rlci1tYWluIC5tZW51PmxpOmZpcnN0LWNoaWxkPmF7cGFkZGluZy1sZWZ0OjBweH0uYy1mb290ZXItbWFpbiAubWVudT5saTpsYXN0LWNoaWxkPmF7cGFkZGluZy1yaWdodDowcHh9LmMtZm9vdGVyLWJvdHRvbXtiYWNrZ3JvdW5kOiMwMDA7Y29sb3I6I2ZmZjtmb250LXNpemU6MC44NzVyZW07ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7cGFkZGluZy10b3A6MXJlbTtwYWRkaW5nLWJvdHRvbToxcmVtfS5jLWJ1dHRvbixpbnB1dFt0eXBlPXN1Ym1pdF17ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzouNXJlbSAxcmVtO2JvcmRlci1yYWRpdXM6NHB4O3RleHQtZGVjb3JhdGlvbjpub25lO3RyYW5zaXRpb246YWxsIDI1MG1zIGxpbmVhcjtsaW5lLWhlaWdodDoxO2ZvbnQtc2l6ZToxcmVtO2JvcmRlcjpub25lO3dpZHRoOjEwMCU7YmFja2dyb3VuZDojMjY0Njc3O2NvbG9yOiM5OTMyY2N9QG1lZGlhKG1pbi13aWR0aDogNDhlbSl7LmMtYnV0dG9uLGlucHV0W3R5cGU9c3VibWl0XXt3aWR0aDphdXRvfX0uYy1idXR0b246aG92ZXIsaW5wdXRbdHlwZT1zdWJtaXRdOmhvdmVye2N1cnNvcjpwb2ludGVyfS5jLWJ1dHRvbjpob3ZlcixpbnB1dFt0eXBlPXN1Ym1pdF06aG92ZXJ7YmFja2dyb3VuZDojOTkzMmNjO2NvbG9yOiMyNjQ2Nzd9LmMtY2FsbG91dC1saW5re3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTt0ZXh0LWRlY29yYXRpb246bm9uZTtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LXdlaWdodDo3MDA7cG9zaXRpb246cmVsYXRpdmU7bGluZS1oZWlnaHQ6MTtjb2xvcjojMjY0Njc3O3RyYW5zaXRpb246YWxsIDEwMG1zIGxpbmVhcjtwYWRkaW5nOjVweCAyMXB4IDNweCAwcHh9LmMtY2FsbG91dC1saW5rOmhvdmVye2NvbG9yOiM5OTMyY2M7dHJhbnNpdGlvbjphbGwgMjUwbXMgbGluZWFyfS5jLWhlcm97YmFja2dyb3VuZC1zaXplOmNvdmVyO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7cGFkZGluZy10b3A6OHJlbTtwYWRkaW5nLWJvdHRvbTo4cmVtO3Bvc2l0aW9uOnJlbGF0aXZlfUBtZWRpYShtaW4td2lkdGg6IDQ4ZW0pey5jLWhlcm97aGVpZ2h0OjEwMHZoO21pbi1oZWlnaHQ6NjAwcHg7cGFkZGluZy10b3A6MDtwYWRkaW5nLWJvdHRvbTowO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXJ9fS5jLWhlcm9fX2Jne3Bvc2l0aW9uOmFic29sdXRlO3RvcDowcHg7bGVmdDowcHg7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kLXNpemU6Y292ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyO21hc2staW1hZ2U6dXJsKFwiL2Fzc2V0cy9pbWFnZXMvaGVyby1tYXNrLnN2Z1wiKTttYXNrLXNpemU6MTYwMHB4IGF1dG87bWFzay1wb3NpdGlvbjo1MDBweCA3MCU7bWFzay1yZXBlYXQ6bm8tcmVwZWF0fS5jLWhlcm9fX2NvbnRlbnR7d2lkdGg6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjEwMDtjb2xvcjojMjY0Njc3O2dyaWQtY29sdW1uOnNwYW4gMn1AbWVkaWEobWluLXdpZHRoOiA0OGVtKXsuYy1oZXJvX19jb250ZW50e2dyaWQtY29sdW1uOnNwYW4gNH19LmMtaGVyb19fdGl0bGV7Zm9udC1zaXplOjEuODc1cmVtO21hcmdpbjowcHh9QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmMtaGVyb19fdGl0bGV7Zm9udC1zaXplOjIuMjVyZW19fS5jLWhlcm9fX3N1YnRpdGxle2ZvbnQtc2l6ZToxLjVyZW07bWFyZ2luOjBweH1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsuYy1oZXJvX19zdWJ0aXRsZXtmb250LXNpemU6MS44NzVyZW19fS51LWxpc3QtLWNvbG91cmVke2xpc3Qtc3R5bGUtdHlwZTpub25lO21hcmdpbjowcHg7cGFkZGluZzowcHh9LnUtbGlzdC0tY29sb3VyZWQgbGl7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZy1sZWZ0Oi43NXJlbTtib3JkZXItbGVmdDo1cHggc29saWQgIzI2NDY3NzttYXJnaW4tYm90dG9tOjEuNXJlbX0uaDEsLmgyLC5oMywuaDQsLmg1LC5oNntmb250LWZhbWlseTpcIkxhdG9cIixzYW5zLXNlcmlmO2ZvbnQtd2VpZ2h0OjcwMDtsaW5lLWhlaWdodDoxLjU7bWFyZ2luLWJvdHRvbTouNXJlbTttYXJnaW4tdG9wOjJyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LmgxLC5oMiwuaDMsLmg0LC5oNSwuaDZ7bWFyZ2luLWJvdHRvbTouNzVyZW07bWFyZ2luLXRvcDo0cmVtfX0uaDE6Zmlyc3QtY2hpbGQsLmgyOmZpcnN0LWNoaWxkLC5oMzpmaXJzdC1jaGlsZCwuaDQ6Zmlyc3QtY2hpbGQsLmg1OmZpcnN0LWNoaWxkLC5oNjpmaXJzdC1jaGlsZHttYXJnaW4tdG9wOjBweH0uaDF7Zm9udC1zaXplOjIuMjVyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7Lmgxe2ZvbnQtc2l6ZToyLjc1cmVtfX0uaDJ7Zm9udC1zaXplOjEuODc1cmVtfUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey5oMntmb250LXNpemU6Mi4yNXJlbX19Lmgze2ZvbnQtc2l6ZToxLjVyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7Lmgze2ZvbnQtc2l6ZToxLjg3NXJlbX19Lmg0e2ZvbnQtc2l6ZToxLjM3NXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsuaDR7Zm9udC1zaXplOjEuNXJlbX19Lmg1e2ZvbnQtc2l6ZToxLjEyNXJlbX1AbWVkaWEobWluLXdpZHRoOiA2NGVtKXsuaDV7Zm9udC1zaXplOjEuMzc1cmVtfX0uaDZ7Zm9udC1zaXplOjFyZW19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7Lmg2e2ZvbnQtc2l6ZToxLjEyNXJlbX19LnRzLWJhc2V7Zm9udC1mYW1pbHk6XCJPcGVuIFNhbnNcIixzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjMwMDtsaW5lLWhlaWdodDoxLjd9QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LnRzLWJhc2V7Zm9udC1zaXplOjEuMTI1cmVtfX1AbWVkaWEobWF4LXdpZHRoOiA2My45OWVtKXsudS1zaG93LW9uLWRlc2t0b3B7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9fUBtZWRpYShtaW4td2lkdGg6IDY0ZW0pey51LWhpZGUtb24tZGVza3RvcHtkaXNwbGF5Om5vbmUgIWltcG9ydGFudH19QG1lZGlhKG1pbi13aWR0aDogNjRlbSl7LnUtc2hvdy1vbi1tb2JpbGV7ZGlzcGxheTpub25lICFpbXBvcnRhbnR9fUBtZWRpYShtYXgtd2lkdGg6IDYzLjk5ZW0pey51LWhpZGUtb24tbW9iaWxle2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50fX0iLCIvKlxuICAgIFNldHRpbmdzOlxuICAgICAgICAtIGZ1bmN0aW9ucyAodXNlZCBzb21ldGltZXMgdG8gZGVmaW5lIHZhbHVlcyBpbiBzZXR0aW5ncylcbiAgICAgICAgLSBHbG9iYWwgdmFyaWFibGVzIGFuZCBjb25maWd1cmF0aW9uXG4qL1xuQGltcG9ydCAnZnVuY3Rpb25zJztcblxuXG4vKlxuICAgIEJyZWFrcG9pbnRzIChzYXNzLW1xIHBhY2thZ2UpXG4qL1xuJG1xLWJyZWFrcG9pbnRzOiAoXG4gICAgbWQ6IDc2OHB4LFxuICAgIGxnOiAxMDI0cHgsXG4gICAgeGw6IDEyMDBweCxcbiAgICB4eGw6IDE0NDBweCxcbiAgICB4eHhsOiAxNjAwcHhcbik7XG5cbi8vIHZpZXdwb3J0L2JyZWFrcG9pbnQgZGVidWc6IGNvbW1lbnQgb3V0IGluIHByb2R1Y3Rpb25cbi8vICRtcS1zaG93LWJyZWFrcG9pbnRzOiAobWQsIGxnLCB4bCwgeHhsKTtcblxuXG5cbi8qXG4gICAgQ29udGFpbmVycyAoc2VlIF9jb250YWluZXJzLnNjc3MpLCB3ZSBoYXZlIDIgb3B0aW9uczpcbiAgICAxKSBmbHVpZCAoYXMgRm91bmRhdGlvbilcbiAgICAyKSBmaXhlZCBwZXIgYnJlYWtwb2ludCAoYXMgQm9vdHN0cmFwKVxuKi9cbi8vIEZsdWlkIGNvbnRhaW5lcjogbWF4LXdpZHRoOiAxMDAlIHVudGlsIGJpZ2dlciBzY3JlZW5zXG4kY29udGFpbmVyX2ZsdWlkX21heF93aWR0aDogMTQ0MHB4O1xuXG4vLyBGaXhlZCBjb250YWluZXI6IG1heC13aWR0aCBwZXIgYnJlYWtwb2ludFxuJGNvbnRhaW5lcl9maXhlZF9tYXhfd2lkdGhzOiAoXG4gICAgbWQ6IDc2OHB4LFxuICAgIGxnOiAxMDI0cHgsXG4gICAgeGw6IDEyMDBweCxcbiAgICB4eGw6IDE0NDBweFxuKTtcbiRjb250YWluZXJfYWRkaXRpb25hbF9wYWRkaW5nX3B4OiAwO1xuJGNvbnRhaW5lcl9hZGRpdGlvbmFsX3BhZGRpbmc6IHJlbUNhbGMoMCk7XG5cblxuXG4vKlxuICAgIEdyaWRcbiovXG4kZ3JpZF9jb2xzOiAxMjtcbiRncmlkX2NvbF9nYXA6IDMwcHg7XG4kZ3JpZF9yb3dfZ2FwOiAzMHB4O1xuJG1heC1jb2x1bW4td2lkdGg6IG1hdGguZGl2KCgkY29udGFpbmVyX2ZsdWlkX21heF93aWR0aCAtICRncmlkX2NvbF9nYXAgLSAoJGdyaWRfY29sX2dhcCAqIDExKSksIDEyKTtcblxuXG5cbi8qXG4gICAgU3BhY2luZ3Mvc2l6ZXNcbiovXG4kc3BhY2VfM3hzOiAwLjEycmVtO1xuJHNwYWNlXzJ4czogMC4yNXJlbTtcbiRzcGFjZV94czogMC41cmVtO1xuJHNwYWNlX3M6IDAuNzVyZW07XG4kc3BhY2VfbTogMXJlbTtcbiRzcGFjZV9sOiAxLjVyZW07XG4kc3BhY2VfeGw6IDJyZW07XG4kc3BhY2VfMnhsOiAzcmVtO1xuJHNwYWNlXzN4bDogNHJlbTtcbiRzcGFjZV8zNXhsOiA2cmVtO1xuJHNwYWNlXzR4bDogOHJlbTtcbiRzcGFjZV80NXhsOiAxMHJlbTtcbiRzcGFjZV81eGw6IDEycmVtO1xuJHNwYWNlXzU1eGw6IDE0cmVtO1xuJHNwYWNlXzZ4bDogMTZyZW07XG5cbi8qIHNhc3MgbWFwIHVzZWZ1bCB0byBnZW5lcmF0ZSBjbGFzc2VzIChfc3BhY2luZy1jbGFzc2VzLnNjc3MpICovXG4kc3BhY2luZ3M6IChcbiAgICBcIjJ4c1wiOiAkc3BhY2VfMnhzLFxuICAgIFwieHNcIjogJHNwYWNlX3hzLFxuICAgIFwic1wiOiAkc3BhY2VfcyxcbiAgICBcIm1cIjogJHNwYWNlX20sXG4gICAgXCJsXCI6ICRzcGFjZV9sLFxuICAgIFwieGxcIjogJHNwYWNlX3hsLFxuICAgIFwiMnhsXCI6ICRzcGFjZV8yeGwsXG4gICAgXCIzeGxcIjogJHNwYWNlXzN4bCxcbiAgICBcIjR4bFwiOiAkc3BhY2VfNHhsXG4pO1xuXG4vKiBmb3JtcyAqL1xuJGZvcm0taW5wdXRfaGVpZ2h0OiA0OHB4O1xuXG4vKiBidXR0b25zICovXG4kYnV0dG9uX2hlaWdodDogNDhweDtcblxuXG5cbi8qXG4gICAgei1pbmRleCB2YWx1ZXNcbiovXG4kemluZGV4XzEwOiAxMDtcbiR6aW5kZXhfMTAwOiAxMDA7XG4kemluZGV4XzEwMDA6IDEwMDA7XG4kemluZGV4XzEwMDAwOiAxMDAwMDtcblxuXG5cbi8qXG4gICAgQ29sb3JzXG4qL1xuJGNvbG9yX3doaXRlOiAjZmZmO1xuJGNvbG9yX2JsYWNrOiAjMzMzO1xuJGNvbG9yX2JsYWNrMDogIzAwMDtcbiRjb2xvcl9ncmV5OiAjQ0NDO1xuXG4kY29sb3JfYmx1ZTogcmdiKDM4LCA3MCwgMTE5KTtcbiRjb2xvcl92aW9sZXQ6ICBkYXJrb3JjaGlkO1xuXG4kY29sb3JfcHJpbWFyeTogJGNvbG9yX2JsdWU7XG4kY29sb3Jfc2Vjb25kYXJ5OiAkY29sb3JfdmlvbGV0O1xuJGNvbG9yX3RleHQ6ICRjb2xvcl9ibGFjaztcblxuXG5cbi8qIHNhc3MgbWFwIHVzZWZ1bCB0byBnZW5lcmF0ZSBjbGFzc2VzICovXG4kY29sb3JzOiAoXG4gICAgXCJ3aGl0ZVwiOiAkY29sb3Jfd2hpdGUsXG4gICAgXCJibGFja1wiOiAkY29sb3JfYmxhY2ssXG4gICAgXCJibGFjazBcIjogJGNvbG9yX2JsYWNrMCxcbiAgICBcImdyZXlcIjogJGNvbG9yX2dyZXksXG4gICAgXCJibHVlXCI6ICRjb2xvcl9ibHVlLFxuICAgIFwidmlvbGV0XCI6ICRjb2xvcl92aW9sZXRcbik7XG5cblxuXG5cbi8qXG4gICAgVHlwb2dyYXBoeVxuKi9cbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUxhdG86d2dodEAzMDA7NDAwOzcwMCZmYW1pbHk9T3BlbitTYW5zOndnaHRAMzAwOzQwMDs3MDAmZGlzcGxheT1zd2FwJyk7XG4kZm9udF9mYW1pbHlfMTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4kZm9udF9mYW1pbHlfMjogJ0xhdG8nLCBzYW5zLXNlcmlmO1xuXG5cblxuLypcbiAgICBSZXNwb25zaXZlIHR5cG9ncmFwaHk6IHN0ZXBwZWQgd2l0aCB2YWx1ZSBwZXIgYnJlYWtwb2ludCBtYXBcbiAgICAodG8gYmUgdXNlZCB3aXRoIHJlc3BvbnNpdmUtcHJvcGVydHkgbWl4aW4pXG4qL1xuJGZvbnRfc2l6ZV9iYXNlOiAoXG4gICAgc206IHJlbUNhbGMoMTYpLFxuICAgIGxnOiByZW1DYWxjKDE4KVxuKTtcblxuJGZvbnRfc2l6ZV8xOiAoXG4gICAgc206IHJlbUNhbGMoMzYpLFxuICAgIGxnOiByZW1DYWxjKDQ0KVxuKTtcblxuJGZvbnRfc2l6ZV8yOiAoXG4gICAgc206IHJlbUNhbGMoMzApLFxuICAgIGxnOiByZW1DYWxjKDM2KVxuKTtcblxuJGZvbnRfc2l6ZV8zOiAoXG4gICAgc206IHJlbUNhbGMoMjQpLFxuICAgIGxnOiByZW1DYWxjKDMwKVxuKTtcblxuJGZvbnRfc2l6ZV80OiAoXG4gICAgc206IHJlbUNhbGMoMjIpLFxuICAgIGxnOiByZW1DYWxjKDI0KVxuKTtcblxuJGZvbnRfc2l6ZV81OiAoXG4gICAgc206IHJlbUNhbGMoMTgpLFxuICAgIGxnOiByZW1DYWxjKDIyKVxuKTtcblxuJGZvbnRfc2l6ZV82OiAoXG4gICAgc206IHJlbUNhbGMoMTYpLFxuICAgIGxnOiByZW1DYWxjKDE4KVxuKTtcblxuJGZvbnRfc2l6ZV9zZWN0aW9uX3RpdGxlOiAoXG4gICAgc206IHJlbUNhbGMoMTYpLFxuICAgIGxnOiByZW1DYWxjKDE4KVxuKTtcblxuJGZvbnRfc2l6ZV9zZWN0aW9uX3ByZXRpdGxlOiAoXG4gICAgc206IHJlbUNhbGMoMTYpLFxuICAgIGxnOiByZW1DYWxjKDE4KVxuKTtcblxuJGZvbnRfc2l6ZV9zZWN0aW9uX25hbWU6IChcbiAgICBzbTogcmVtQ2FsYygxMylcbik7XG5cbi8qXG4gICAgUmVzcG9uc2l2ZSB0eXBvZ3JhcGh5OiBmbHVpZCB3aXRoIGNsYW1wXG4gICAgRm9udCBzaXplcyB3aXRoIGNsYW1wIHRvIGJlIHVzZWQgZGlyZWN0bHlcbiovXG4vKlxuJGZvbnRfc2l6ZV9mbHVpZF8xOiBjbGFtcCgje3JlbUNhbGMoNTApfSwgNC41dncsICN7cmVtQ2FsYyg3NSl9KTtcbiRmb250X3NpemVfZmx1aWRfMjogY2xhbXAoI3tyZW1DYWxjKDQwKX0sIDR2dywgI3tyZW1DYWxjKDU2KX0pO1xuJGZvbnRfc2l6ZV9mbHVpZF8zOiBjbGFtcCgje3JlbUNhbGMoMzApfSwgM3Z3LCAje3JlbUNhbGMoNDIpfSk7XG4kZm9udF9zaXplX2ZsdWlkXzQ6IGNsYW1wKCN7cmVtQ2FsYygyMil9LCAyLjV2dywgI3tyZW1DYWxjKDMxKX0pO1xuJGZvbnRfc2l6ZV9mbHVpZF81OiBjbGFtcCgje3JlbUNhbGMoMTgpfSwgMnZ3LCAje3JlbUNhbGMoMjMpfSk7XG4qL1xuXG5cblxuLypcbiAgICBUcmFuc2l0aW9uc1xuKi9cbiR0cmFuc19saW5lYXI6IGFsbCAyNTBtcyBsaW5lYXI7XG4kdHJhbnNfbGluZWFyX2Zhc3Q6IGFsbCAxMDBtcyBsaW5lYXI7XG4kdHJhbnNfZWFzZUluT3V0Q3ViaWM6IGFsbCA0NTBtcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xuJHRyYW5zX2Vhc2VPdXRDdWJpYzogYWxsIDQ1MG1zIGN1YmljLWJlemllcigwLjIxNSwgMC42MTAsIDAuMzU1LCAxLjAwMCk7XG4kdHJhbnNfZWFzZU91dEN1YmljX2Zhc3Q6IGFsbCAyNTBtcyBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNjEwLCAwLjM1NSwgMS4wMDApO1xuJHRyYW5zX2Vhc2VPdXRDdWJpY19zbG93OiBhbGwgNjAwbXMgY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxMCwgMC4zNTUsIDEuMDAwKTtcbiR0cmFuc19lYXNlT3V0QmFjazogYWxsIDI1MG1zIGN1YmljLWJlemllciguMjksMS41OSwuNjEsMS4zNSk7XG5cbiR0cmFuc19mdW5jX2Vhc2VJbk91dEN1YmljOiBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xuJHRyYW5zX2Z1bmNfZWFzZU91dEN1YmljOiBjdWJpYy1iZXppZXIoMC4yMTUsIDAuNjEwLCAwLjM1NSwgMS4wMDApO1xuXG5cblxuXG4vKlxuICBWYXJpb3VzXG4qL1xuJGJvcmRlcl9yYWRpdXM6IDI0cHg7XG4kYm9yZGVyX3JhZGl1c19zbWFsbDogNHB4O1xuJGJvcmRlcl9yYWRpdXNfc21hbGwyOiA4cHg7XG4kc2xhc2h5X2RlZ3M6IDEyMGRlZztcbiRib3hfc2hhZG93OiAwcHggMnB4IDRweCAycHggcmdiYSgwLDAsMCwwLjEpO1xuJGJveF9zaGFkb3dfMjogMHB4IDJweCA0cHggMnB4IHJnYmEoMCwwLDAsMC4zKTtcblxuXG5cbi8qXG4gICAgVUlraXQgdmFyaWFibGVzXG4qL1xuLypcbiRhbmltYXRpb24tZHVyYXRpb246IDAuM3M7XG4kYW5pbWF0aW9uLWZhZGUtZHVyYXRpb246IDAuOHMgIWRlZmF1bHQ7XG4kYW5pbWF0aW9uLXN0cm9rZS1kdXJhdGlvbjogMnMgIWRlZmF1bHQ7XG4kYW5pbWF0aW9uLWtlbmJ1cm5zLWR1cmF0aW9uOiA2cyAhZGVmYXVsdDtcbiRhbmltYXRpb24tZmFzdC1kdXJhdGlvbjogMC4xcyAhZGVmYXVsdDtcbiRhbmltYXRpb24tc2xpZGUtc21hbGwtdHJhbnNsYXRlOiAxNXB4O1xuJGFuaW1hdGlvbi1zbGlkZS1tZWRpdW0tdHJhbnNsYXRlOiA1MHB4ICFkZWZhdWx0O1xuXG4kbmF2YmFyLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuJG5hdmJhci1uYXYtaXRlbS1oZWlnaHQ6IDBweDtcbiRuYXZiYXItbmF2LWl0ZW0tY29sb3I6ICRjb2xvcl90ZXh0O1xuJG5hdmJhci1uYXYtaXRlbS1mb250LXNpemU6IHJlbUNhbGMoMTYpO1xuJG5hdmJhci1uYXYtaXRlbS1mb250LWZhbWlseTogJGZvbnRfZmFtaWx5XzE7XG4kbmF2YmFyLW5hdi1pdGVtLWFjdGl2ZS1jb2xvcjogJGNvbG9yX3RleHQ7XG4kbmF2YmFyLW5hdi1pdGVtLWhvdmVyLWNvbG9yOiAkY29sb3JfcHJpbWFyeTtcblxuJG5hdmJhci1kcm9wZG93bi1uYXYtaXRlbS1jb2xvcjogJGNvbG9yX3RleHQ7XG4kbmF2YmFyLWRyb3Bkb3duLW5hdi1pdGVtLWhvdmVyLWNvbG9yOiAkY29sb3JfcHJpbWFyeTtcbiRuYXZiYXItZHJvcGRvd24tbmF2LWl0ZW0tYWN0aXZlLWNvbG9yOiAkY29sb3JfdGV4dDtcblxuJGRyb3Bkb3duLWJhY2tncm91bmQ6ICRjb2xvcl93aGl0ZTtcbiRkcm9wZG93bi1taW4td2lkdGg6IDIwMHB4O1xuJGRyb3Bkb3duLXBhZGRpbmc6ICRzcGFjZV9tICRzcGFjZV9sO1xuJGRyb3Bkb3duLWNvbG9yOiAkY29sb3JfdGV4dDtcbiRkcm9wZG93bi1tYXJnaW46IDBweDtcbiRkcm9wZG93bi1uYXYtaXRlbS1jb2xvcjogdG9tYXRvO1xuJGRyb3Bkb3duLW5hdi1pdGVtLWhvdmVyLWNvbG9yOiBncmVlbjtcblxuJG9mZmNhbnZhcy16LWluZGV4OiAkemluZGV4XzEwMDAwO1xuJG9mZmNhbnZhcy1iYXItd2lkdGg6IDI3MHB4O1xuJG9mZmNhbnZhcy1iYXItcGFkZGluZy12ZXJ0aWNhbDogJHNwYWNlX207XG4kb2ZmY2FudmFzLWJhci1wYWRkaW5nLWhvcml6b250YWw6ICRzcGFjZV9sO1xuJG9mZmNhbnZhcy1iYXItYmFja2dyb3VuZDogJGNvbG9yX3doaXRlO1xuXG5AaW1wb3J0IFwidWlraXQvc3JjL3Njc3MvdmFyaWFibGVzXCI7XG4qL1xuIiwiLyogRG9jdW1lbnRcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIGJvcmRlciBib3ggc2l6aW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQmFja2dyb3VuZHMgZG8gbm90IHJlcGVhdCBieSBkZWZhdWx0IChvcGluaW9uYXRlZCkuXG4gKi9cblxuKixcbjo6YmVmb3JlLFxuOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIEFkZCB0ZXh0IGRlY29yYXRpb24gaW5oZXJpdGFuY2UgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBBZGQgdmVydGljYWwgYWxpZ25tZW50IGluaGVyaXRhbmNlIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjo6YmVmb3JlLFxuOjphZnRlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFVzZSB0aGUgZGVmYXVsdCBjdXJzb3IgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDaGFuZ2UgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMy4gQnJlYWtzIHdvcmRzIHRvIHByZXZlbnQgb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiA0LiBVc2UgYSA0LXNwYWNlIHRhYiB3aWR0aCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDUuIFJlbW92ZSB0aGUgZ3JleSBoaWdobGlnaHQgb24gbGlua3MgaW4gaU9TIChvcGluaW9uYXRlZCkuXG4gKiA2LiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuXG46d2hlcmUoOnJvb3QpIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjU7IC8qIDIgKi9cbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDsgLyogMyAqL1xuICAtbW96LXRhYi1zaXplOiA0OyAvKiA0ICovXG4gIHRhYi1zaXplOiA0OyAvKiA0ICovXG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDUgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiA2ICovXG59XG5cbi8qIFNlY3Rpb25zXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZShib2R5KSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBFZGdlLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbjp3aGVyZShoMSkge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBvbiBuZXN0ZWQgbGlzdHMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjp3aGVyZShkbCwgb2wsIHVsKSA6d2hlcmUoZGwsIG9sLCB1bCkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2Ugb2YgYm9yZGVyIGNvbG9yIGluIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICovXG5cbjp3aGVyZShocikge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGxpc3Qgc3R5bGUgb24gbmF2aWdhdGlvbiBsaXN0cyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG46d2hlcmUobmF2KSA6d2hlcmUob2wsIHVsKSB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IFZvaWNlT3ZlciBmcm9tIGlnbm9yaW5nIGxpc3Qgc2VtYW50aWNzIGluIFNhZmFyaSAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZShuYXYgbGkpOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcMjAwQlwiO1xuICBmbG9hdDogbGVmdDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICogMy4gUHJldmVudCBvdmVyZmxvdyBvZiB0aGUgY29udGFpbmVyIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZShwcmUpIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG4gIG92ZXJmbG93OiBhdXRvOyAvKiAzICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gU2FmYXJpLlxuICovXG5cbjp3aGVyZShhYmJyW3RpdGxlXSkge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuOndoZXJlKGIsIHN0cm9uZykge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuOndoZXJlKGNvZGUsIGtiZCwgc2FtcCkge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG46d2hlcmUoc21hbGwpIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBDaGFuZ2UgdGhlIGFsaWdubWVudCBvbiBtZWRpYSBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG46d2hlcmUoYXVkaW8sIGNhbnZhcywgaWZyYW1lLCBpbWcsIHN2ZywgdmlkZW8pIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpZnJhbWVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZShpZnJhbWUpIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgZmlsbCBjb2xvciB0byBtYXRjaCB0aGUgdGV4dCBjb2xvciBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG46d2hlcmUoc3ZnOm5vdChbZmlsbF0pKSB7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbn1cblxuLyogVGFidWxhciBkYXRhXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvbGxhcHNlIGJvcmRlciBzcGFjaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQ29ycmVjdCB0YWJsZSBib3JkZXIgY29sb3IgaW5oZXJpdGFuY2UgaW4gYWxsIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqIDMuIFJlbW92ZSB0ZXh0IGluZGVudGF0aW9uIGZyb20gdGFibGUgY29udGVudHMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjp3aGVyZSh0YWJsZSkge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyAvKiAxICovXG4gIGJvcmRlci1jb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICB0ZXh0LWluZGVudDogMDsgLyogMyAqL1xufVxuXG4vKiBGb3Jtc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBvbiBjb250cm9scyBpbiBTYWZhcmkuXG4gKi9cblxuOndoZXJlKGJ1dHRvbiwgaW5wdXQsIHNlbGVjdCkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGJ1dHRvbnMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuOndoZXJlKGJ1dHRvbiwgW3R5cGU9XCJidXR0b25cIiBpXSwgW3R5cGU9XCJyZXNldFwiIGldLCBbdHlwZT1cInN1Ym1pdFwiIGldKSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgaW5jb25zaXN0ZW50IGFwcGVhcmFuY2UgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuOndoZXJlKGZpZWxkc2V0KSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhMGEwYTA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBGaXJlZm94LlxuICovXG5cbjp3aGVyZShwcm9ncmVzcykge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICogMy4gQ2hhbmdlIHRoZSByZXNpemUgZGlyZWN0aW9uIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZSh0ZXh0YXJlYSkge1xuICBtYXJnaW46IDA7IC8qIDEgKi9cbiAgcmVzaXplOiB2ZXJ0aWNhbDsgLyogMyAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cbjp3aGVyZShbdHlwZT1cInNlYXJjaFwiIGldKSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG46Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIHVwbG9hZCBidXR0b25zIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IHN0eWxlcyBpbiBTYWZhcmkuXG4gKi9cblxuOndoZXJlKGRpYWxvZykge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBzb2xpZDtcbiAgY29sb3I6IGJsYWNrO1xuICBoZWlnaHQ6IC1tb3otZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogYXV0bztcbiAgcGFkZGluZzogMWVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogLW1vei1maXQtY29udGVudDtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xufVxuXG46d2hlcmUoZGlhbG9nOm5vdChbb3Blbl0pKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBTYWZhcmkuXG4gKi9cblxuOndoZXJlKGRldGFpbHMgPiBzdW1tYXJ5OmZpcnN0LW9mLXR5cGUpIHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBBY2Nlc3NpYmlsaXR5XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENoYW5nZSB0aGUgY3Vyc29yIG9uIGJ1c3kgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuOndoZXJlKFthcmlhLWJ1c3k9XCJ0cnVlXCIgaV0pIHtcbiAgY3Vyc29yOiBwcm9ncmVzcztcbn1cblxuLypcbiAqIENoYW5nZSB0aGUgY3Vyc29yIG9uIGNvbnRyb2wgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuOndoZXJlKFthcmlhLWNvbnRyb2xzXSkge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qXG4gKiBDaGFuZ2UgdGhlIGN1cnNvciBvbiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2VcbiAqIGlub3BlcmFibGUgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuOndoZXJlKFthcmlhLWRpc2FibGVkPVwidHJ1ZVwiIGldLCBbZGlzYWJsZWRdKSB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG5cbi8qXG4gKiBDaGFuZ2UgdGhlIGRpc3BsYXkgb24gdmlzdWFsbHkgaGlkZGVuIGFjY2Vzc2libGUgZWxlbWVudHNcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbjp3aGVyZShbYXJpYS1oaWRkZW49XCJmYWxzZVwiIGldW2hpZGRlbl0pIHtcbiAgZGlzcGxheTogaW5pdGlhbDtcbn1cblxuOndoZXJlKFthcmlhLWhpZGRlbj1cImZhbHNlXCIgaV1baGlkZGVuXTpub3QoOmZvY3VzKSkge1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG4iLCIvKlxuICAgIEZvcm1zIGVsZW1lbnRzXG4qL1xuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0sXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxuaW5wdXRbdHlwZT1cImZpbGVcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbnRleHRhcmVhIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6ICRmb3JtLWlucHV0X2hlaWdodDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyX3JhZGl1c19zbWFsbDtcbiAgICBwYWRkaW5nOiAwcHggJHNwYWNlX2w7XG4gICAgYm9yZGVyOiB0aGluIHNvbGlkIGRhcmtlbigkY29sb3JfZ3JleSwgMTAlKTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNpdGlvbjogJHRyYW5zX2xpbmVhcl9mYXN0O1xuICAgIGZvbnQtc2l6ZTogcmVtQ2FsYygxNik7XG4gICAgYmFja2dyb3VuZDogJGNvbG9yX3doaXRlO1xuICAgIGNvbG9yOiAkY29sb3JfYmxhY2s7XG5cbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgYm94LXNoYWRvdzogJGJveF9zaGFkb3c7XG4gICAgfVxufVxuXG5cblxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBAaW5jbHVkZSBweSgkc3BhY2VfeHMpO1xufVxuXG5cblxuOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICRjb2xvcl9wcmltYXJ5O1xuICAgIG9wYWNpdHk6IDAuODtcbiAgICBmb250LWZhbWlseTogJGZvbnRfZmFtaWx5XzE7XG59XG5cblxuXG50ZXh0YXJlYSB7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICBwYWRkaW5nOiAkc3BhY2VfbSAkc3BhY2VfbTtcbn1cblxuXG5cbnNlbGVjdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAkZm9ybS1pbnB1dF9oZWlnaHQ7XG4gICAgcGFkZGluZzogMHB4ICRzcGFjZV8yeGwgMHB4ICRzcGFjZV9sO1xuICAgIGJvcmRlcjogdGhpbiBzb2xpZCAkY29sb3JfZ3JleTtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3Jfd2hpdGU7XG4gICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGNvbG9yOiByZ2JhKCRjb2xvcl9wcmltYXJ5LCAwLjgpO1xuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxufVxuXG5cblxuZmllbGRzZXQge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNlX3hsO1xuXG4gICAgbGVnZW5kIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNlX3hzO1xuICAgIH1cblxuICAgIC5mb3JtLWl0ZW0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkc3BhY2VfeHM7XG4gICAgfVxufVxuXG5cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgQGV4dGVuZCAuYy1idXR0b247XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG59XG4iLCIvKlxuICAgIEJhc2U6IGdyb3VuZCB6ZXJvIHN0eWxlcy5cblxuICAgIE5vIGNsYXNzZXM6XG4gICAgICAgIC0gbm9ybWFsaXplL3Jlc2V0XG4gICAgICAgIC0gdHlwZSBzZWxlY3RvcnNcbiovXG4vKiBOb3JtYWxpemUvUmVzZXQgKi9cbkBpbXBvcnQgJ3Nhbml0aXplLmNzcy9zYW5pdGl6ZSc7XG5AaW1wb3J0ICdmb3Jtcyc7XG5cblxuXG4vKiBUeXBlIHNlbGVjdG9yIHN0eWxlICovXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3Jfd2hpdGU7XG4gICAgY29sb3I6ICRjb2xvcl90ZXh0O1xuICAgIEBpbmNsdWRlIHRzLWJhc2UoKTtcbn1cblxucCB7XG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICAgIG1hcmdpbi1ib3R0b206ICRzcGFjZV9tO1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIH1cbn1cblxuXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gICAgQGluY2x1ZGUgdHMtaGVhZGxpbmVzLWNvbW1vbnMoKTtcbn1cblxuaDF7XG4gICAgQGluY2x1ZGUgZnMxKCk7XG59XG5cbmgye1xuICAgIEBpbmNsdWRlIGZzMigpO1xufVxuXG5oM3tcbiAgICBAaW5jbHVkZSBmczMoKTtcbn1cblxuaDR7XG4gICAgQGluY2x1ZGUgZnM0KCk7XG59XG5cbmg1e1xuICAgIEBpbmNsdWRlIGZzNSgpO1xufVxuXG5oNntcbiAgICBAaW5jbHVkZSBmczYoKTtcbn1cblxuXG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbn1cblxuXG5cbmEge1xuICAgIGNvbG9yOiAkY29sb3JfcHJpbWFyeTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNfbGluZWFyX2Zhc3Q7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRjb2xvcl9zZWNvbmRhcnk7XG4gICAgfVxufVxuXG5cblxuYnV0dG9uIHtcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG59XG5cblxuXG51bCB7XG4gICAgQGluY2x1ZGUgbXkoJHNwYWNlX3MpO1xuICAgIHBhZGRpbmctbGVmdDogJHNwYWNlX2w7XG5cbiAgICBsaSB7XG4gICAgICAgIEBpbmNsdWRlIHB5KCRzcGFjZV8yeHMpO1xuICAgIH1cblxuICAgICYgKyBwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogJHNwYWNlX3hsO1xuICAgIH1cbn1cblxuXG5cbjo6c2VsZWN0aW9uIHtcbiAgICBjb2xvcjogJGNvbG9yX3doaXRlO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvcl9wcmltYXJ5O1xufVxuXG5cblxudGFibGUge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcblxuICAgIHRib2R5IHtcbiAgICAgICAgYm9yZGVyLXRvcDogdGhpbiBzb2xpZCBkYXJrZW4oJGNvbG9yX2dyZXksIDglKTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCBkYXJrZW4oJGNvbG9yX2dyZXksIDglKTtcbiAgICAgICAgdHI6bnRoLWNoaWxkKG9kZCkge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yX2dyZXk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0ZCxcbiAgICB0aCB7XG4gICAgICAgIHBhZGRpbmc6ICRzcGFjZV9zICRzcGFjZV9tO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgIH1cbn1cbiIsIi8qXG4gICAgQXBwbHkgdGhlIHByb3BlcnR5LCBjeWNsaW5nIHZhbHVlcyBpbiBtYXAgbWFkZSB1cCBvZiAoYnJlYWtwb2ludDp2YWx1ZXMpXG4qL1xuQG1peGluIHJlc3BvbnNpdmUtcHJvcGVydHkoJHByb3BlcnR5LCAkdmFsdWVzX21hcCkge1xuICAgIEBlYWNoICRicmVha3BvaW50LCAkdmFsdWUgaW4gJHZhbHVlc19tYXAge1xuICAgICAgICBAaWYgKCRicmVha3BvaW50ID09ICdzbScpIHtcbiAgICAgICAgICAgICN7JHByb3BlcnR5fTogI3skdmFsdWV9O1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xKCRicmVha3BvaW50KSB7XG4gICAgICAgICAgICAgICAgI3skcHJvcGVydHl9OiAjeyR2YWx1ZX07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vKlxuICAgIENlbnRlcmluZyB0aGluZ3Mgd2l0aCBwb3NpdGlvbiBhYnNvbHV0ZSBhbmQgdHJhbnNmb3JtXG4qL1xuQG1peGluIGFicy1jZW50ZXIoKSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuXG5AbWl4aW4gYWJzLXZlcnRpY2FsLWNlbnRlcigpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG5cbkBtaXhpbiBhYnMtaG9yaXpvbnRhbC1jZW50ZXIoKSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cblxuXG4vKlxuICAgIEZpbGwgdGhlIGNvbnRhaW5lciB3aXRoIHBvc2l0aW9uIGFic29sdXRlXG4qL1xuQG1peGluIGFicy1maWxsKCkge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDBweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG5cblxuLypcbiAgICBCYWNrZ3JvdW5kIGltYWdlIGluIHNpemUgY292ZXJcbiovXG5AbWl4aW4gYmctaW1hZ2UoJHVybDogbnVsbCkge1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgQGlmICR1cmwge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHVybCk7XG4gICAgfVxufVxuXG5cblxuLypcbiAgICBIb3ZlciBlZmZlY3QgZm9yIGltYWdlIGxpbms6IHNjYWxlIGltYWdlIG9uIGhvdmVyXG4gICAgQG1hcmt1cDpcbiAgICAgICAgPGE+XG4gICAgICAgICAgICA8aW1nPlxuICAgICAgICA8L2E+XG5cbiAgICBAYXBwbHktb24gPGE+XG4qL1xuQG1peGluIHNjYWxlLW9uLWhvdmVyKCkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgaW1nIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAgICAgdHJhbnNpdGlvbjogJHRyYW5zX2Vhc2VPdXRDdWJpY19mYXN0O1xuICAgICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDgpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cblxuLypcbiAgICBNZW51IEhvcml6b250YWwgQmFzZSBTdHlsZVxuICAgIEBhcHBseS1vbjogPHVsPlxuKi9cbkBtaXhpbiBtZW51LWJhc2UtaCgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbjogMHB4O1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cbiAgICAmID4gbGkge1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgcGFkZGluZzogMHB4O1xuXG4gICAgICAgICYgPiBhIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAmID4gYSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgJiA+IGEge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8qXG4gICAgTWVudSBWZXJ0aWNhbCBCYXNlIFN0eWxlXG4gICAgQGFwcGx5LW9uOiA8dWw+XG4qL1xuQG1peGluIG1lbnUtYmFzZS12KCkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMHB4O1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cbiAgICAmID4gbGkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgIHBhZGRpbmc6IDBweDtcblxuICAgICAgICAmID4gYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBAaW5jbHVkZSBweSgkc3BhY2VfMnhzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5AbWl4aW4gbGluay1kZWNvcmF0aW9uKCRjb2xvcjogJGNvbG9yX3doaXRlKSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwcHg7XG4gICAgICAgIHRvcDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDBweDtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICRjb2xvcjtcbiAgICAgICAgdHJhbnNpdGlvbjogJHRyYW5zX2Vhc2VPdXRDdWJpY19mYXN0O1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiLypcbiAgICBGb250IHNpemUgbWl4aW5zXG4qL1xuQG1peGluIGZzMSgpIHtcbiAgICBAaW5jbHVkZSByZXNwb25zaXZlLXByb3BlcnR5KFwiZm9udC1zaXplXCIsICRmb250X3NpemVfMSk7XG4gICAgLy8gZm9udC1zaXplOiAkZm9udF9zaXplX2ZsdWlkXzE7XG59XG5cbkBtaXhpbiBmczIoKSB7XG4gICAgQGluY2x1ZGUgcmVzcG9uc2l2ZS1wcm9wZXJ0eShcImZvbnQtc2l6ZVwiLCAkZm9udF9zaXplXzIpO1xuICAgIC8vIGZvbnQtc2l6ZTogJGZvbnRfc2l6ZV9mbHVpZF8yO1xufVxuXG5AbWl4aW4gZnMzKCkge1xuICAgIEBpbmNsdWRlIHJlc3BvbnNpdmUtcHJvcGVydHkoXCJmb250LXNpemVcIiwgJGZvbnRfc2l6ZV8zKTtcbiAgICAvLyBmb250LXNpemU6ICRmb250X3NpemVfZmx1aWRfMztcbn1cblxuQG1peGluIGZzNCgpIHtcbiAgICBAaW5jbHVkZSByZXNwb25zaXZlLXByb3BlcnR5KFwiZm9udC1zaXplXCIsICRmb250X3NpemVfNCk7XG4gICAgLy8gZm9udC1zaXplOiAkZm9udF9zaXplX2ZsdWlkXzQ7XG59XG5cbkBtaXhpbiBmczUoKSB7XG4gICAgQGluY2x1ZGUgcmVzcG9uc2l2ZS1wcm9wZXJ0eShcImZvbnQtc2l6ZVwiLCAkZm9udF9zaXplXzUpO1xuICAgIC8vIGZvbnQtc2l6ZTogJGZvbnRfc2l6ZV9mbHVpZF81O1xufVxuXG5AbWl4aW4gZnM2KCkge1xuICAgIEBpbmNsdWRlIHJlc3BvbnNpdmUtcHJvcGVydHkoXCJmb250LXNpemVcIiwgJGZvbnRfc2l6ZV82KTtcbiAgICAvLyBmb250LXNpemU6ICRmb250X3NpemVfZmx1aWRfNjtcbn1cblxuXG5cbi8qXG4gICAgVGV4dCBTdHlsZTogQmFzZVxuKi9cbkBtaXhpbiB0cy1iYXNlKCkge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udF9mYW1pbHlfMTtcbiAgICBAaW5jbHVkZSByZXNwb25zaXZlLXByb3BlcnR5KFwiZm9udC1zaXplXCIsICRmb250X3NpemVfYmFzZSk7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBsaW5lLWhlaWdodDogMS43O1xufVxuXG5AbWl4aW4gdHMtaGVhZGxpbmVzLWNvbW1vbnMge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udF9mYW1pbHlfMjtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgbWFyZ2luLWJvdHRvbTogJHNwYWNlX3hzO1xuICAgIG1hcmdpbi10b3A6ICRzcGFjZV94bDtcblxuICAgIEBpbmNsdWRlIG1xKGxnKSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjZV9zO1xuICAgICAgICBtYXJnaW4tdG9wOiAkc3BhY2VfM3hsO1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgfVxufVxuXG5AbWl4aW4gdHMtc2VjdGlvbi1uYW1lKCkge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udF9mYW1pbHlfMTtcbiAgICBAaW5jbHVkZSByZXNwb25zaXZlLXByb3BlcnR5KFwiZm9udC1zaXplXCIsICRmb250X3NpemVfc2VjdGlvbl9uYW1lKTtcbiAgICBjb2xvcjogJGNvbG9yX2dyZXk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuXG5AbWl4aW4gdHMtc2VjdGlvbi1wcmV0aXRsZSgpIHtcbiAgICBmb250LWZhbWlseTogJGZvbnRfZmFtaWx5XzE7XG4gICAgQGluY2x1ZGUgcmVzcG9uc2l2ZS1wcm9wZXJ0eShcImZvbnQtc2l6ZVwiLCAkZm9udF9zaXplXzIpO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbkBtaXhpbiB0cy1zZWN0aW9uLXRpdGxlKCkge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udF9mYW1pbHlfMTtcbiAgICBAaW5jbHVkZSByZXNwb25zaXZlLXByb3BlcnR5KFwiZm9udC1zaXplXCIsICRmb250X3NpemVfMik7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBsaW5lLWhlaWdodDogMS4xO1xuICAgIGNvbG9yOiAkY29sb3JfYmx1ZTtcbn1cblxuXG5cbiIsIkB1c2UgJ3Nhc3M6bWF0aCc7XG5AdXNlICdzYXNzOm1hcCc7XG5AdXNlICdzYXNzOmxpc3QnO1xuXG4vLy8gQnJlYWtwb2ludCBsaXN0XG4vLy9cbi8vLyBOYW1lIHlvdXIgYnJlYWtwb2ludHMgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgdWJpcXVpdG91cyBsYW5ndWFnZVxuLy8vIGFjcm9zcyB0ZWFtIG1lbWJlcnMuIEl0IHdpbGwgaW1wcm92ZSBjb21tdW5pY2F0aW9uIGJldHdlZW5cbi8vLyBzdGFrZWhvbGRlcnMsIGRlc2lnbmVycywgZGV2ZWxvcGVycywgYW5kIHRlc3RlcnMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3NlZWluZy10aGUtY3VycmVudGx5LWFjdGl2ZS1icmVha3BvaW50IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbiRicmVha3BvaW50czogKFxuICBtb2JpbGU6IDMyMHB4LFxuICB0YWJsZXQ6IDc0MHB4LFxuICBkZXNrdG9wOiA5ODBweCxcbiAgd2lkZTogMTMwMHB4LFxuKSAhZGVmYXVsdDtcblxuLy8vIFNob3cgYnJlYWtwb2ludHMgaW4gdGhlIHRvcCByaWdodCBjb3JuZXJcbi8vL1xuLy8vIElmIHlvdSB3YW50IHRvIGRpc3BsYXkgdGhlIGN1cnJlbnRseSBhY3RpdmUgYnJlYWtwb2ludCBpbiB0aGUgdG9wXG4vLy8gcmlnaHQgY29ybmVyIG9mIHlvdXIgc2l0ZSBkdXJpbmcgZGV2ZWxvcG1lbnQsIGFkZCB0aGUgYnJlYWtwb2ludHNcbi8vLyB0byB0aGlzIGxpc3QsIG9yZGVyZWQgYnkgd2lkdGguIEZvciBleGFtcGxlOiAobW9iaWxlLCB0YWJsZXQsIGRlc2t0b3ApLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAgQHVzZSAncGF0aC90by9tcScgd2l0aCAoJHNob3ctYnJlYWtwb2ludHM6ICgnbW9iaWxlJywgJ3RhYmxldCcsICdkZXNrdG9wJykpO1xuLy8vXG4vLy9cbi8vLyBAdHlwZSBtYXBcbiRzaG93LWJyZWFrcG9pbnRzOiAoKSAhZGVmYXVsdDtcblxuLy8vIEN1c3RvbWl6ZSB0aGUgbWVkaWEgdHlwZSAoZm9yIGV4YW1wbGU6IGBAbWVkaWEgc2NyZWVuYCBvciBgQG1lZGlhIHByaW50YClcbi8vLyBCeSBkZWZhdWx0IHNhc3MtbXEgdXNlcyBhbiBcImFsbFwiIG1lZGlhIHR5cGUgKGBAbWVkaWEgYWxsIGFuZCDigKZgKVxuLy8vXG4vLy8gSWYgeW91IHdhbnQgdG8gb3ZlcnJpZWQgdGhlIG1lZGlhIHR5cGUsIHlvdSBjYW4gdXNlIHRoaXMgb3B0aW9uLlxuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIEB1c2UgJ3BhdGgvdG8vbXEnIHdpdGggKCRtZWRpYS10eXBlOiAnc2NyZWVuJyk7XG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2NoYW5naW5nLW1lZGlhLXR5cGUgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlXG4kbWVkaWEtdHlwZTogYWxsICFkZWZhdWx0O1xuXG4vLy8gQ29udmVydCBwaXhlbHMgdG8gZW1zXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHB4IC0gdmFsdWUgdG8gY29udmVydFxuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAkZm9udC1zaXplLWluLWVtczogcHgyZW0oMTZweCk7XG4vLy8gIHAgeyBmb250LXNpemU6IHB4MmVtKDE2cHgpOyB9XG4vLy9cbi8vLyBAcmV0dXJucyB7TnVtYmVyfVxuXG5AZnVuY3Rpb24gcHgyZW0oJHB4KSB7XG4gIEBpZiBtYXRoLmlzLXVuaXRsZXNzKCRweCkge1xuICAgIEB3YXJuIFwiQXNzdW1pbmcgI3skcHh9IHRvIGJlIGluIHBpeGVscywgYXR0ZW1wdGluZyB0byBjb252ZXJ0IGl0IGludG8gcGl4ZWxzLlwiO1xuICAgIEByZXR1cm4gcHgyZW0oJHB4ICogMXB4KTtcbiAgfVxuICAvLyBpZiAkcHggaXMgY29tcGF0aWJsZSB3aXRoIGVtIHVuaXRzLCB0aGVuIHJldHVybiB2YWx1ZSB1bmNoYW5nZWRcbiAgQGlmIG1hdGguY29tcGF0aWJsZSgkcHgsIDFlbSkge1xuICAgIEByZXR1cm4gJHB4O1xuICB9XG4gIEByZXR1cm4gbWF0aC5kaXYoJHB4LCAxNnB4KSAqIDFlbTtcbn1cblxuLy8vIEdldCBhIGJyZWFrcG9pbnQncyB3aWR0aFxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRuYW1lIC0gTmFtZSBvZiB0aGUgYnJlYWtwb2ludC4gT25lIG9mICRicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAkdGFibGV0LXdpZHRoOiBnZXQtYnJlYWtwb2ludC13aWR0aCh0YWJsZXQpO1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogZ2V0LWJyZWFrcG9pbnQtd2lkdGgodGFibGV0KSkge31cbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vXG4vLy8gQHJldHVybnMge051bWJlcn0gVmFsdWUgaW4gcGl4ZWxzXG5AZnVuY3Rpb24gZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJG5hbWUsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gIEBpZiBtYXAuaGFzLWtleSgkYnJlYWtwb2ludHMsICRuYW1lKSB7XG4gICAgQHJldHVybiBtYXAuZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiBcIkJyZWFrcG9pbnQgI3skbmFtZX0gd2Fzbid0IGZvdW5kIGluICRicmVha3BvaW50cy5cIjtcbiAgICBAcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8vIE1lZGlhIFF1ZXJ5IG1peGluXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZyB8IEJvb2xlYW59ICRmcm9tIFtmYWxzZV0gLSBPbmUgb2YgJGJyZWFrcG9pbnRzXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBCb29sZWFufSAkdW50aWwgW2ZhbHNlXSAtIE9uZSBvZiAkYnJlYWtwb2ludHNcbi8vLyBAcGFyYW0ge1N0cmluZyB8IEJvb2xlYW59ICRhbmQgW2ZhbHNlXSAtIEFkZGl0aW9uYWwgbWVkaWEgcXVlcnkgcGFyYW1ldGVyc1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVkaWEtdHlwZSBbJG1lZGlhLXR5cGVdIC0gTWVkaWEgdHlwZTogc2NyZWVuLCBwcmludOKAplxuLy8vXG4vLy8gQGlnbm9yZSBVbmRvY3VtZW50ZWQgQVBJLCBmb3IgYWR2YW5jZWQgdXNlIG9ubHk6XG4vLy8gQGlnbm9yZSBAcGFyYW0ge01hcH0gJGJyZWFrcG9pbnRzIFskYnJlYWtwb2ludHNdXG4vLy9cbi8vLyBAY29udGVudCBzdHlsaW5nIHJ1bGVzLCB3cmFwcGVkIGludG8gYSBAbWVkaWEgcXVlcnkgd2hlbiAkcmVzcG9uc2l2ZSBpcyB0cnVlXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbWVkaWEtdHlwZVxuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vIEByZXF1aXJlcyB7ZnVuY3Rpb259IHB4MmVtXG4vLy8gQHJlcXVpcmVzIHtmdW5jdGlvbn0gZ2V0LWJyZWFrcG9pbnQtd2lkdGhcbi8vL1xuLy8vIEBsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9zYXNzLW1xL3Nhc3MtbXEjcmVzcG9uc2l2ZS1tb2RlLW9uLWRlZmF1bHQgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAdXNlICdwYXRoL3RvL21xJyBhcyAqO1xuLy8vICAuZWxlbWVudCB7XG4vLy8gICAgQGluY2x1ZGUgbXEoJGZyb206IG1vYmlsZSkge1xuLy8vICAgICAgY29sb3I6IHJlZDtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoJHVudGlsOiB0YWJsZXQpIHtcbi8vLyAgICAgIGNvbG9yOiBibHVlO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcShtb2JpbGUsIHRhYmxldCkge1xuLy8vICAgICAgY29sb3I6IGdyZWVuO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSgkZnJvbTogdGFibGV0LCAkYW5kOiAnKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpJykge1xuLy8vICAgICAgY29sb3I6IHRlYWw7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKDk1MHB4KSB7XG4vLy8gICAgICBjb2xvcjogaG90cGluaztcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEodGFibGV0LCAkbWVkaWEtdHlwZTogc2NyZWVuKSB7XG4vLy8gICAgICBjb2xvcjogaG90cGluaztcbi8vLyAgICB9XG4vLy8gICAgLy8gQWR2YW5jZWQgdXNlOlxuLy8vICAgICRteS1icmVha3BvaW50czogKEw6IDkwMHB4LCBYTDogMTIwMHB4KTtcbi8vLyAgICBAaW5jbHVkZSBtcShMLCAkYnJlYWtwb2ludHM6ICRteS1icmVha3BvaW50cykge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICB9XG5AbWl4aW4gbXEoXG4gICRmcm9tOiBmYWxzZSxcbiAgJHVudGlsOiBmYWxzZSxcbiAgJGFuZDogZmFsc2UsXG4gICRtZWRpYS10eXBlOiAkbWVkaWEtdHlwZSxcbiAgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHNcbikge1xuICAkbWluLXdpZHRoOiAwO1xuICAkbWF4LXdpZHRoOiAwO1xuICAkbWVkaWEtcXVlcnk6ICcnO1xuXG4gIC8vIEZyb206IHRoaXMgYnJlYWtwb2ludCAoaW5jbHVzaXZlKVxuICBAaWYgJGZyb20ge1xuICAgIEBpZiB0eXBlLW9mKCRmcm9tKSA9PSBudW1iZXIge1xuICAgICAgJG1pbi13aWR0aDogcHgyZW0oJGZyb20pO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJG1pbi13aWR0aDogcHgyZW0oZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJGZyb20sICRicmVha3BvaW50cykpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVudGlsOiB0aGF0IGJyZWFrcG9pbnQgKGV4Y2x1c2l2ZSlcbiAgQGlmICR1bnRpbCB7XG4gICAgQGlmIHR5cGUtb2YoJHVudGlsKSA9PSBudW1iZXIge1xuICAgICAgJG1heC13aWR0aDogcHgyZW0oJHVudGlsKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRtYXgtd2lkdGg6IHB4MmVtKGdldC1icmVha3BvaW50LXdpZHRoKCR1bnRpbCwgJGJyZWFrcG9pbnRzKSkgLSAwLjAxZW07XG4gICAgfVxuICB9XG5cbiAgQGlmICRtaW4td2lkdGggIT0gMCB7XG4gICAgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWluLXdpZHRoOiAjeyRtaW4td2lkdGh9KSc7XG4gIH1cbiAgQGlmICRtYXgtd2lkdGggIT0gMCB7XG4gICAgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWF4LXdpZHRoOiAjeyRtYXgtd2lkdGh9KSc7XG4gIH1cbiAgQGlmICRhbmQge1xuICAgICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgI3skYW5kfSc7XG4gIH1cblxuICAvLyBSZW1vdmUgdW5uZWNlc3NhcnkgbWVkaWEgcXVlcnkgcHJlZml4ICdhbGwgYW5kICdcbiAgQGlmICgkbWVkaWEtdHlwZSA9PSAnYWxsJyBhbmQgJG1lZGlhLXF1ZXJ5ICE9ICcnKSB7XG4gICAgJG1lZGlhLXR5cGU6ICcnO1xuICAgICRtZWRpYS1xdWVyeTogc3RyLXNsaWNlKHVucXVvdGUoJG1lZGlhLXF1ZXJ5KSwgNik7XG4gIH1cblxuICBAbWVkaWEgI3skbWVkaWEtdHlwZSArICRtZWRpYS1xdWVyeX0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBRdWljayBzb3J0XG4vLy9cbi8vLyBAYXV0aG9yIFNhbSBSaWNoYXJkc1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TGlzdH0gU29ydGVkIExpc3RcbkBmdW5jdGlvbiBfcXVpY2stc29ydCgkbGlzdCkge1xuICAkbGVzczogKCk7XG4gICRlcXVhbDogKCk7XG4gICRsYXJnZTogKCk7XG5cbiAgQGlmIGxlbmd0aCgkbGlzdCkgPiAxIHtcbiAgICAkc2VlZDogbGlzdC5udGgoJGxpc3QsIG1hdGguY2VpbChtYXRoLmRpdihsZW5ndGgoJGxpc3QpLCAyKSkpO1xuXG4gICAgQGVhY2ggJGl0ZW0gaW4gJGxpc3Qge1xuICAgICAgQGlmICgkaXRlbSA9PSAkc2VlZCkge1xuICAgICAgICAkZXF1YWw6IGxpc3QuYXBwZW5kKCRlcXVhbCwgJGl0ZW0pO1xuICAgICAgfSBAZWxzZSBpZiAoJGl0ZW0gPCAkc2VlZCkge1xuICAgICAgICAkbGVzczogbGlzdC5hcHBlbmQoJGxlc3MsICRpdGVtKTtcbiAgICAgIH0gQGVsc2UgaWYgKCRpdGVtID4gJHNlZWQpIHtcbiAgICAgICAgJGxhcmdlOiBsaXN0LmFwcGVuZCgkbGFyZ2UsICRpdGVtKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBAcmV0dXJuIGpvaW4oam9pbihfcXVpY2stc29ydCgkbGVzcyksICRlcXVhbCksIF9xdWljay1zb3J0KCRsYXJnZSkpO1xuICB9XG5cbiAgQHJldHVybiAkbGlzdDtcbn1cblxuLy8vIFNvcnQgYSBtYXAgYnkgdmFsdWVzICh3b3JrcyB3aXRoIG51bWJlcnMgb25seSlcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vIEBwYXJhbSB7TWFwfSAkbWFwIC0gTWFwIHRvIHNvcnRcbi8vLyBAcmV0dXJucyB7TWFwfSBNYXAgc29ydGVkIGJ5IHZhbHVlXG5AZnVuY3Rpb24gX21hcC1zb3J0LWJ5LXZhbHVlKCRtYXApIHtcbiAgJG1hcC1zb3J0ZWQ6ICgpO1xuICAkbWFwLWtleXM6IG1hcC5rZXlzKCRtYXApO1xuICAkbWFwLXZhbHVlczogbWFwLnZhbHVlcygkbWFwKTtcbiAgJG1hcC12YWx1ZXMtc29ydGVkOiBfcXVpY2stc29ydCgkbWFwLXZhbHVlcyk7XG5cbiAgLy8gUmVvcmRlciBrZXkvdmFsdWUgcGFpcnMgYmFzZWQgb24ga2V5IHZhbHVlc1xuICBAZWFjaCAkdmFsdWUgaW4gJG1hcC12YWx1ZXMtc29ydGVkIHtcbiAgICAkaW5kZXg6IGluZGV4KCRtYXAtdmFsdWVzLCAkdmFsdWUpO1xuICAgICRrZXk6IGxpc3QubnRoKCRtYXAta2V5cywgJGluZGV4KTtcbiAgICAkbWFwLXNvcnRlZDogbWFwLm1lcmdlKFxuICAgICAgJG1hcC1zb3J0ZWQsXG4gICAgICAoXG4gICAgICAgICRrZXk6ICR2YWx1ZSxcbiAgICAgIClcbiAgICApO1xuXG4gICAgLy8gVW5zZXQgdGhlIHZhbHVlIGluICRtYXAtdmFsdWVzIHRvIHByZXZlbnQgdGhlIGxvb3BcbiAgICAvLyBmcm9tIGZpbmRpbmcgdGhlIHNhbWUgaW5kZXggdHdpY2VcbiAgICAkbWFwLXZhbHVlczogbGlzdC5zZXQtbnRoKCRtYXAtdmFsdWVzLCAkaW5kZXgsIDApO1xuICB9XG5cbiAgQHJldHVybiAkbWFwLXNvcnRlZDtcbn1cblxuLy8vIEFkZCBhIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIC0gV2lkdGggb2YgdGhlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAaW5jbHVkZSBhZGQtYnJlYWtwb2ludCh0dnNjcmVlbiwgMTkyMHB4KTtcbi8vLyAgQGluY2x1ZGUgbXEodHZzY3JlZW4pIHt9XG5AbWl4aW4gYWRkLWJyZWFrcG9pbnQoJG5hbWUsICR3aWR0aCkge1xuICAkbmV3LWJyZWFrcG9pbnQ6IChcbiAgICAkbmFtZTogJHdpZHRoLFxuICApO1xuICAkYnJlYWtwb2ludHM6IG1hcC5tZXJnZSgkYnJlYWtwb2ludHMsICRuZXctYnJlYWtwb2ludCkgIWdsb2JhbDtcbiAgJGJyZWFrcG9pbnRzOiBfbWFwLXNvcnQtYnktdmFsdWUoJGJyZWFrcG9pbnRzKSAhZ2xvYmFsO1xufVxuXG4vLy8gU2hvdyB0aGUgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHZpZXdwb3J0XG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2hvdy1icmVha3BvaW50cyBbJHNob3ctYnJlYWtwb2ludHNdIC0gTGlzdCBvZiBicmVha3BvaW50cyB0byBzaG93IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy8gQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyBbJGJyZWFrcG9pbnRzXSAtIEJyZWFrcG9pbnQgbmFtZXMgYW5kIHNpemVzXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkc2hvdy1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGdsb2JhbCBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBzaG93LWJyZWFrcG9pbnRzO1xuLy8vXG4vLy8gIC8vIFNob3cgYnJlYWtwb2ludHMgdXNpbmcgY3VzdG9tIHNldHRpbmdzXG4vLy8gIEBpbmNsdWRlIHNob3ctYnJlYWtwb2ludHMoKEwsIFhMKSwgKFM6IDMwMHB4LCBMOiA4MDBweCwgWEw6IDEyMDBweCkpO1xuQG1peGluIHNob3ctYnJlYWtwb2ludHMoXG4gICRzaG93LWJyZWFrcG9pbnRzOiAkc2hvdy1icmVha3BvaW50cyxcbiAgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHNcbikge1xuICBib2R5OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMztcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZiZWVkNTtcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmYmVlZDU7XG4gICAgY29sb3I6ICNjMDk4NTM7XG4gICAgZm9udDogc21hbGwtY2FwdGlvbjtcbiAgICBwYWRkaW5nOiAzcHggNnB4O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgei1pbmRleDogMTAwO1xuXG4gICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBicmVha3BvaW50cyB0aGF0IHNob3VsZCBiZSBzaG93blxuICAgIEBlYWNoICRzaG93LWJyZWFrcG9pbnQgaW4gJHNob3ctYnJlYWtwb2ludHMge1xuICAgICAgJHdpZHRoOiBnZXQtYnJlYWtwb2ludC13aWR0aCgkc2hvdy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgQGluY2x1ZGUgbXEoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHMpIHtcbiAgICAgICAgY29udGVudDogJyN7JHNob3ctYnJlYWtwb2ludH0g4omlICN7JHdpZHRofSAoI3tweDJlbSgkd2lkdGgpfSknO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AaWYgbGlzdC5sZW5ndGgoJHNob3ctYnJlYWtwb2ludHMpID4gMCB7XG4gIEBpbmNsdWRlIHNob3ctYnJlYWtwb2ludHM7XG59XG4iLCIubC1jb250YWluZXJ7XG4gICAgQGluY2x1ZGUgY29udGFpbmVyKCk7XG5cbiAgICAubC1jb250YWluZXIge1xuICAgICAgICBAaW5jbHVkZSBweCgwKTtcbiAgICB9XG59XG4iLCIvKlxuICAgIEZsdWlkIGNvbnRhaW5lciAoYXMgRm91bmRhdGlvbilcbiAgICBtYXgtd2lkdGg6IDEwMCUgdW50aWwgYmlnZ2VyIHNjcmVlbnNcbiovXG5AbWl4aW4gY29udGFpbmVyKCkge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogJGNvbnRhaW5lcl9mbHVpZF9tYXhfd2lkdGg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogJGdyaWRfY29sX2dhcDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkZ3JpZF9jb2xfZ2FwO1xuXG4gICAgQGluY2x1ZGUgbXEobGcpIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBtYXRoLmRpdigkZ3JpZF9jb2xfZ2FwLCAyKTtcbiAgICAgICAgcGFkZGluZy1yaWdodDogbWF0aC5kaXYoJGdyaWRfY29sX2dhcCwgMik7XG4gICAgfVxufVxuXG5cblxuLypcbiAgICBGaXhlZCBjb250YWluZXIgKGFzIEJvb3RzdHJhcClcbiAgICBtYXgtd2lkdGggcGVyIGJyZWFrcG9pbnQgKEJvb290c3RyYXAgd2F5KVxuKi9cbi8qXG5AbWl4aW4gY29udGFpbmVyLWZpeGVkKCkge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBwYWRkaW5nLWxlZnQ6IG1hdGguZGl2KCRncmlkX2NvbF9nYXAsIDIpO1xuICAgIHBhZGRpbmctcmlnaHQ6IG1hdGguZGl2KCRncmlkX2NvbF9nYXAsIDIpO1xuXG4gICAgQGVhY2ggJGJyZWFrcG9pbnROYW1lLCAkYnJlYWtwb2ludE1heFdpZHRoIGluICRjb250YWluZXJfZml4ZWRfbWF4X3dpZHRoc3tcbiAgICAgICAgQGluY2x1ZGUgbXEoJGJyZWFrcG9pbnROYW1lKSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6ICRicmVha3BvaW50TWF4V2lkdGg7XG4gICAgICAgIH1cbiAgICB9XG59XG4qL1xuIiwiLypcbiAgICBHcmlkIGNvbnRhaW5lclxuKi9cbi5sLWdyaWQge1xuICAgIEBpbmNsdWRlIGdyaWQoKTtcbn1cblxuLmwtZ3JpZC0tc3VwZXIge1xuICAgIEBpbmNsdWRlIHN1cGVyLWdyaWQoKTtcbn1cblxuXG5cbi8qXG4gICAgR3JpZCBjZWxsc1xuKi9cbi8vIFdpZHRoIGNsYXNzZXM6IG5vIG1lZGlhIHF1ZXJpZXNcbkBmb3IgJGkgZnJvbSAxIHRvICRncmlkX2NvbHMgKyAxIHtcbiAgICAubC1jZWxsLSN7JGl9IHtcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1jZWxsLXNwYW4oJGkpO1xuICAgIH1cbn1cblxuLy8gV2lkdGggY2xhc3NlczogcGVyIGJyZWFrcG9pbnRzXG5AZWFjaCAkYnJlYWtwb2ludE5hbWUsICRicmVha3BvaW50VmFsdWUgaW4gJG1xLWJyZWFrcG9pbnRze1xuICAgIEBmb3IgJGkgZnJvbSAxIHRvICRncmlkX2NvbHMgKyAxIHtcbiAgICAgICAgLiN7JGJyZWFrcG9pbnROYW1lfVxcOmwtY2VsbC0jeyRpfSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBtcSgkYnJlYWtwb2ludE5hbWUpe1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGdyaWQtY2VsbC1zcGFuKCRpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIi8qXG4gIERlZmluZSBncmlkIGNvbnRhaW5lclxuXG4gIFBhcmFtczpcbiAgICAtIG51bWJlcnMgb2YgY29sdW1uc1xuICAgIC0gY29sdW1ucyBnYXBcbiAgICAtIHJvd3MgZ2FwXG4qL1xuQG1peGluIGdyaWQoXG4gICAgJGNvbHNfbnVtYmVyOiAkZ3JpZF9jb2xzLFxuICAgICRjb2xfZ2FwOiAkZ3JpZF9jb2xfZ2FwLFxuICAgICRyb3dfZ2FwOiAkZ3JpZF9yb3dfZ2FwXG4pIHtcblxuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgbWlubWF4KDAsIDFmcikpO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xuICAgIGdhcDogJHJvd19nYXAgJGNvbF9nYXA7XG5cbiAgICBAaW5jbHVkZSBtcShtZCkge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgkY29sc19udW1iZXIsIG1pbm1heCgwLCAxZnIpKTtcbiAgICAgICAgZ2FwOiAkcm93X2dhcCAkY29sX2dhcDtcbiAgICB9XG59XG5cblxuXG4vKlxuICAgIFN1cGVyIGdyaWQ6XG4gICAgYSBncmlkIHRoYXQgYWJvdmUgY29udGFpbmVyIG1heCB3aWR0aCBiZWhhdmVzIGFzIGl0IHdhcyBpbiBhIGNvbnRhaW5lcixcbiAgICB1c2VmdWwgZm9yIGxheW91dCB3aXRoIHNvbWUgZWxlbWVudHMgdGhhdCB0b3VjaCB2aWV3cG9ydCBlZGdlcyBhbmQgb3RoZXJzIG9uZSBpbiBncmlkLFxuICAgIGFrYSBsb21iaXogYmxvY2tcbiovXG5AbWl4aW4gc3VwZXItZ3JpZChcbiAgICAkY29sc19udW1iZXI6ICRncmlkX2NvbHMsXG4gICAgJG1heC1jb2x1bW4td2lkdGg6ICRtYXgtY29sdW1uLXdpZHRoXG4pIHtcbiAgICBAaW5jbHVkZSBncmlkKCk7XG5cbiAgICBAaW5jbHVkZSBtcSh4eGwpIHtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgcmVwZWF0KCRjb2xzX251bWJlciwgJG1heC1jb2x1bW4td2lkdGgpIDFmcjtcbiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICAgIH1cbn1cblxuXG5cbi8qXG4gIERlZmluZSBhIGdyaWQgY2VsbCB1c2luZyBsaW5lc1xuXG4gIFBhcmFtczpcbiAgICAtIGNvbCBzdGFydFxuICAgIC0gY29sIGVuZFxuICAgIC0gcm93IHN0YXJ0XG4gICAgLSByb3cgZW5kXG4qL1xuQG1peGluIGdyaWQtY2VsbC1saW5lcyhcbiAgICAkY29sX3N0YXJ0OiAwLFxuICAgICRjb2xfZW5kOiAkZ3JpZF9jb2xzLFxuICAgICRyb3dfc3RhcnQ6IG51bGwsXG4gICAgJHJvd19lbmQ6IG51bGxcbikge1xuXG4gICAgZ3JpZC1jb2x1bW46ICN7JGNvbF9zdGFydH0gLyAjeyRjb2xfZW5kfTtcblxuICAgIEBpZiAkcm93X3N0YXJ0IGFuZCAkcm93X2VuZCB7XG4gICAgICAgIGdyaWQtcm93OiAkcm93X3N0YXJ0ICRyb3dfZW5kO1xuICAgIH1cbn1cblxuXG5cbi8qXG4gIERlZmluZSBhIGdyaWQgY2VsbCB1c2luZyBzcGFuIChzaXplKVxuXG4gIFBhcmFtczpcbiAgICAgIC0gY29sX3N0YXJ0XG4gICAgICAtIHNpemVcbiovXG5AbWl4aW4gZ3JpZC1jZWxsLXNwYW4oXG4gICAgJHNpemU6ICRncmlkX2NvbHMsXG4gICAgJGNvbF9zdGFydDogbnVsbFxuKSB7XG5cbiAgICBAaWYgJGNvbF9zdGFydCB7XG4gICAgICAgIGdyaWQtY29sdW1uOiAkY29sX3N0YXJ0IC8gc3BhbiAkc2l6ZTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gJHNpemU7XG4gICAgfVxufVxuXG5cblxuLypcbiAgICBTaG9ydGN1dCBmb3IgZ3JpZCBjZWxsIHdpdGggcGFyYW1zXG4qL1xuQG1peGluIGdyaWQtY2VsbChcbiAgICAkbW9iaWxlOiAyLFxuICAgICRtZDogMTIsXG4gICAgJGxnOiBudWxsLFxuICAgICR4bDogbnVsbCxcbiAgICAkeHhsOiBudWxsLFxuKSB7XG4gICAgQGluY2x1ZGUgZ3JpZC1jZWxsLXNwYW4oJG1vYmlsZSk7XG5cbiAgICBAaW5jbHVkZSBtcShtZCkge1xuICAgICAgICBAaW5jbHVkZSBncmlkLWNlbGwtc3BhbigkbWQpO1xuICAgIH1cblxuICAgIEBpZiAkbGcge1xuICAgICAgICBAaW5jbHVkZSBtcShsZykge1xuICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jZWxsLXNwYW4oJGxnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkeGwge1xuICAgICAgICBAaW5jbHVkZSBtcSh4bCkge1xuICAgICAgICAgICAgQGluY2x1ZGUgZ3JpZC1jZWxsLXNwYW4oJHhsKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkeHhsIHtcbiAgICAgICAgQGluY2x1ZGUgbXEoeHhsKSB7XG4gICAgICAgICAgICBAaW5jbHVkZSBncmlkLWNlbGwtc3BhbigkeHhsKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8qXG4gICAgU2hvcnRjdXQgZm9yIGNvbW1vbiBncmlkIGNlbGwgaW1wbGVtZW50YXRpb246IGZ1bGxcbiAgICBtb2JpbGU6IHNwYW4gMlxuICAgIG1kOiBzcGFuIDEyXG4qL1xuQG1peGluIGdyaWQtY2VsbC1mdWxsKCkge1xuICAgIEBpbmNsdWRlIGdyaWQtY2VsbC1zcGFuKDIpO1xuXG4gICAgQGluY2x1ZGUgbXEobWQpIHtcbiAgICAgICAgQGluY2x1ZGUgZ3JpZC1jZWxsLXNwYW4oMTIpO1xuICAgIH1cbn1cblxuXG5cbi8qXG4gICAgU2hvcnRjdXQgZm9yIGNvbW1vbiBncmlkIGNlbGwgaW1wbGVtZW50YXRpb246IGhhbGYgc3RhcnRpbmcgZnJvbSBtZFxuICAgIG1vYmlsZTogc3BhbiAyXG4gICAgbWQ6IHNwYW4gNlxuKi9cbkBtaXhpbiBncmlkLWNlbGwtaGFsZigpIHtcbiAgICBAaW5jbHVkZSBncmlkLWNlbGwtc3BhbigyKTtcblxuICAgIEBpbmNsdWRlIG1xKG1kKSB7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY2VsbC1zcGFuKDYpO1xuICAgIH1cbn1cbiIsIi5jLWhlYWRlciB7XG4gICAgQGluY2x1ZGUgcHkoJHNwYWNlX3MpO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvcl9ibHVlO1xuICAgIGNvbG9yOiAkY29sb3Jfd2hpdGU7XG5cblxuICAgICZfX2lubmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cbn0iLCIuYy1mb290ZXIge1xuXG59XG5cbi5jLWZvb3Rlci10b3Age1xuXG59XG5cbi5jLWZvb3Rlci1tYWluIHtcbiAgICBwYWRkaW5nLXRvcDogJHNwYWNlXzJ4bDtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNlXzN4bDtcblxuICAgIC5tZW51IHtcbiAgICAgICAgQGluY2x1ZGUgbWVudS1iYXNlLWgoKTtcbiAgICB9XG59XG5cblxuLmMtZm9vdGVyLWJvdHRvbSB7XG4gICAgYmFja2dyb3VuZDogJGNvbG9yX2JsYWNrMDtcbiAgICBjb2xvcjogJGNvbG9yX3doaXRlO1xuICAgIGZvbnQtc2l6ZTogcmVtQ2FsYygxNCk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBAaW5jbHVkZSBweSgkc3BhY2VfbSk7XG59XG4iLCJAbWl4aW4gYnV0dG9uLWNvbW1vbnMoKSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6ICRzcGFjZV94cyAkc3BhY2VfbTtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyX3JhZGl1c19zbWFsbDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogJHRyYW5zX2xpbmVhcjtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgbXEobWQpIHtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG59XG5cblxuXG4vKlxuICBTdGFuZGFyZC9maWxsZWQgYnV0dG9uc1xuKi9cbi5jLWJ1dHRvbiB7XG4gICAgQGluY2x1ZGUgYnV0dG9uLWNvbW1vbnMoKTtcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3JfcHJpbWFyeTtcbiAgICBjb2xvcjogJGNvbG9yX3NlY29uZGFyeTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3Jfc2Vjb25kYXJ5O1xuICAgICAgICBjb2xvcjogJGNvbG9yX3ByaW1hcnk7XG4gICAgfVxufVxuXG5cblxuLypcbiAgICBDYWxsb3V0IGxpbmtcbiovXG4uYy1jYWxsb3V0LWxpbmsge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGNvbG9yOiAkY29sb3JfcHJpbWFyeTtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNfbGluZWFyX2Zhc3Q7XG4gICAgcGFkZGluZzogNXB4IDIxcHggM3B4IDBweDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJGNvbG9yX3NlY29uZGFyeTtcbiAgICAgICAgdHJhbnNpdGlvbjogJHRyYW5zX2xpbmVhcjtcbiAgICB9XG59XG4iLCIuYy1oZXJvIHtcbiAgICBAaW5jbHVkZSBiZy1pbWFnZSgpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcl93aGl0ZTtcbiAgICBAaW5jbHVkZSBweSgkc3BhY2VfNHhsKTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBAaW5jbHVkZSBtcShtZCkge1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICBtaW4taGVpZ2h0OiA2MDBweDtcbiAgICAgICAgQGluY2x1ZGUgcHkoMCk7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuXG5cblxuICAgICZfX2JnIHtcbiAgICAgICAgQGluY2x1ZGUgYWJzLWZpbGwoKTtcbiAgICAgICAgQGluY2x1ZGUgYmctaW1hZ2UoKTtcbiAgICAgICAgbWFzay1pbWFnZTogdXJsKCcvYXNzZXRzL2ltYWdlcy9oZXJvLW1hc2suc3ZnJyk7XG4gICAgICAgIG1hc2stc2l6ZTogMTYwMHB4IGF1dG87XG4gICAgICAgIG1hc2stcG9zaXRpb246IDUwMHB4IDcwJTtcbiAgICAgICAgbWFzay1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICB9XG5cblxuXG4gICAgJl9fY29udGVudCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6ICR6aW5kZXhfMTAwO1xuICAgICAgICBjb2xvcjogJGNvbG9yX2JsdWU7XG4gICAgICAgIEBpbmNsdWRlIGdyaWQtY2VsbCgyLCA0KTtcbiAgICB9XG5cblxuICAgICZfX3RpdGxlIHtcbiAgICAgICAgQGluY2x1ZGUgZnMyKCk7XG4gICAgICAgIG1hcmdpbjogMHB4O1xuICAgIH1cbiAgICBcbiAgICBcbiAgICBcbiAgICAmX19zdWJ0aXRsZSB7XG4gICAgICAgIEBpbmNsdWRlIGZzMygpO1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICB9XG59IiwiLnUtbGlzdC0tY29sb3VyZWQge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDBweDtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbGkge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmctbGVmdDogJHNwYWNlX3M7XG4gICAgICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgJGNvbG9yX3ByaW1hcnk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRzcGFjZV9sO1xuICAgIH1cbn0iLCIvKlxuICAgIEhlYWRpbmdzIHN0eWxlIGNsYXNzZXNcbiovXG4uaDEsXG4uaDIsXG4uaDMsXG4uaDQsXG4uaDUsXG4uaDYge1xuICAgIEBpbmNsdWRlIHRzLWhlYWRsaW5lcy1jb21tb25zKCk7XG59XG5cbi5oMSB7XG4gICAgQGluY2x1ZGUgZnMxKCk7XG59XG5cbi5oMiB7XG4gICAgQGluY2x1ZGUgZnMyKCk7XG59XG5cbi5oMyB7XG4gICAgQGluY2x1ZGUgZnMzKCk7XG59XG5cbi5oNCB7XG4gICAgQGluY2x1ZGUgZnM0KCk7XG59XG5cbi5oNSB7XG4gICAgQGluY2x1ZGUgZnM1KCk7XG59XG5cbi5oNiB7XG4gICAgQGluY2x1ZGUgZnM2KCk7XG59XG5cblxuXG4vKlxuICAgIFRleHQgc3R5bGVzIGNsYXNzZXNcbiovXG4udHMtYmFzZXtcbiAgICBAaW5jbHVkZSB0cy1iYXNlKCk7XG59XG4iLCIudS1zaG93LW9uLWRlc2t0b3Age1xuICAgIEBpbmNsdWRlIG1xKCR1bnRpbDogbGcpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuLnUtaGlkZS1vbi1kZXNrdG9wIHtcbiAgICBAaW5jbHVkZSBtcShsZykge1xuICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4udS1zaG93LW9uLW1vYmlsZSB7XG4gICAgQGluY2x1ZGUgbXEobGcpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuLnUtaGlkZS1vbi1tb2JpbGUge1xuICAgIEBpbmNsdWRlIG1xKCR1bnRpbDogbGcpIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cbiJdfQ== */
